// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.1
// source: lsp/bilibili/bilibili.proto

package bilibili

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LiveStatus int32

const (
	LiveStatus_NoLiving LiveStatus = 0
	LiveStatus_Living   LiveStatus = 1
)

// Enum value maps for LiveStatus.
var (
	LiveStatus_name = map[int32]string{
		0: "NoLiving",
		1: "Living",
	}
	LiveStatus_value = map[string]int32{
		"NoLiving": 0,
		"Living":   1,
	}
)

func (x LiveStatus) Enum() *LiveStatus {
	p := new(LiveStatus)
	*p = x
	return p
}

func (x LiveStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiveStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_bilibili_bilibili_proto_enumTypes[0].Descriptor()
}

func (LiveStatus) Type() protoreflect.EnumType {
	return &file_lsp_bilibili_bilibili_proto_enumTypes[0]
}

func (x LiveStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiveStatus.Descriptor instead.
func (LiveStatus) EnumDescriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{0}
}

type RoundStatus int32

const (
	RoundStatus_Off RoundStatus = 0
	RoundStatus_On  RoundStatus = 1
)

// Enum value maps for RoundStatus.
var (
	RoundStatus_name = map[int32]string{
		0: "Off",
		1: "On",
	}
	RoundStatus_value = map[string]int32{
		"Off": 0,
		"On":  1,
	}
)

func (x RoundStatus) Enum() *RoundStatus {
	p := new(RoundStatus)
	*p = x
	return p
}

func (x RoundStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoundStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_bilibili_bilibili_proto_enumTypes[1].Descriptor()
}

func (RoundStatus) Type() protoreflect.EnumType {
	return &file_lsp_bilibili_bilibili_proto_enumTypes[1]
}

func (x RoundStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoundStatus.Descriptor instead.
func (RoundStatus) EnumDescriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{1}
}

type RoomStatus int32

const (
	RoomStatus_NonExist RoomStatus = 0
	RoomStatus_Exist    RoomStatus = 1
)

// Enum value maps for RoomStatus.
var (
	RoomStatus_name = map[int32]string{
		0: "NonExist",
		1: "Exist",
	}
	RoomStatus_value = map[string]int32{
		"NonExist": 0,
		"Exist":    1,
	}
)

func (x RoomStatus) Enum() *RoomStatus {
	p := new(RoomStatus)
	*p = x
	return p
}

func (x RoomStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_bilibili_bilibili_proto_enumTypes[2].Descriptor()
}

func (RoomStatus) Type() protoreflect.EnumType {
	return &file_lsp_bilibili_bilibili_proto_enumTypes[2]
}

func (x RoomStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomStatus.Descriptor instead.
func (RoomStatus) EnumDescriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{2}
}

type SpecialType int32

const (
	SpecialType_Normal       SpecialType = 0
	SpecialType_Pay          SpecialType = 1
	SpecialType_YearFestival SpecialType = 2
)

// Enum value maps for SpecialType.
var (
	SpecialType_name = map[int32]string{
		0: "Normal",
		1: "Pay",
		2: "YearFestival",
	}
	SpecialType_value = map[string]int32{
		"Normal":       0,
		"Pay":          1,
		"YearFestival": 2,
	}
)

func (x SpecialType) Enum() *SpecialType {
	p := new(SpecialType)
	*p = x
	return p
}

func (x SpecialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpecialType) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_bilibili_bilibili_proto_enumTypes[3].Descriptor()
}

func (SpecialType) Type() protoreflect.EnumType {
	return &file_lsp_bilibili_bilibili_proto_enumTypes[3]
}

func (x SpecialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpecialType.Descriptor instead.
func (SpecialType) EnumDescriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{3}
}

type DynamicDescType int32

const (
	DynamicDescType_DynamicDescTypeUnknown DynamicDescType = 0
	DynamicDescType_WithOrigin             DynamicDescType = 1
	DynamicDescType_WithImage              DynamicDescType = 2
	DynamicDescType_TextOnly               DynamicDescType = 4
	DynamicDescType_WithVideo              DynamicDescType = 8
	DynamicDescType_WithPost               DynamicDescType = 64
	DynamicDescType_WithMusic              DynamicDescType = 256
	DynamicDescType_WithAnime              DynamicDescType = 512
	// 该内容已经不见了哦
	DynamicDescType_WithMiss DynamicDescType = 1024
	// 评分、头像挂件，这种动态下面有一个小卡片的
	DynamicDescType_WithSketch DynamicDescType = 2048
	DynamicDescType_WithMovie  DynamicDescType = 4098
	// 电视剧、综艺
	DynamicDescType_WithDrama DynamicDescType = 4099
	// 4100去哪了捏
	DynamicDescType_WithDocumentary DynamicDescType = 4101
	DynamicDescType_WithLive        DynamicDescType = 4200
	// XXX的收藏夹，收藏夹居然也可以发动态？
	DynamicDescType_WithMylist DynamicDescType = 4300
	// (付费?)课程
	DynamicDescType_WithCourse DynamicDescType = 4302
	DynamicDescType_WithLiveV2 DynamicDescType = 4308
)

// Enum value maps for DynamicDescType.
var (
	DynamicDescType_name = map[int32]string{
		0:    "DynamicDescTypeUnknown",
		1:    "WithOrigin",
		2:    "WithImage",
		4:    "TextOnly",
		8:    "WithVideo",
		64:   "WithPost",
		256:  "WithMusic",
		512:  "WithAnime",
		1024: "WithMiss",
		2048: "WithSketch",
		4098: "WithMovie",
		4099: "WithDrama",
		4101: "WithDocumentary",
		4200: "WithLive",
		4300: "WithMylist",
		4302: "WithCourse",
		4308: "WithLiveV2",
	}
	DynamicDescType_value = map[string]int32{
		"DynamicDescTypeUnknown": 0,
		"WithOrigin":             1,
		"WithImage":              2,
		"TextOnly":               4,
		"WithVideo":              8,
		"WithPost":               64,
		"WithMusic":              256,
		"WithAnime":              512,
		"WithMiss":               1024,
		"WithSketch":             2048,
		"WithMovie":              4098,
		"WithDrama":              4099,
		"WithDocumentary":        4101,
		"WithLive":               4200,
		"WithMylist":             4300,
		"WithCourse":             4302,
		"WithLiveV2":             4308,
	}
)

func (x DynamicDescType) Enum() *DynamicDescType {
	p := new(DynamicDescType)
	*p = x
	return p
}

func (x DynamicDescType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynamicDescType) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_bilibili_bilibili_proto_enumTypes[4].Descriptor()
}

func (DynamicDescType) Type() protoreflect.EnumType {
	return &file_lsp_bilibili_bilibili_proto_enumTypes[4]
}

func (x DynamicDescType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynamicDescType.Descriptor instead.
func (DynamicDescType) EnumDescriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{4}
}

type AddOnCardShowType int32

const (
	AddOnCardShowType_AddOnCardShowTypeUnknown AddOnCardShowType = 0
	// 商品
	AddOnCardShowType_goods AddOnCardShowType = 1
	// 相关游戏/作品/装扮
	AddOnCardShowType_related AddOnCardShowType = 2
	AddOnCardShowType_vote    AddOnCardShowType = 3
	// 比赛
	AddOnCardShowType_match AddOnCardShowType = 4
	// 视频
	AddOnCardShowType_video AddOnCardShowType = 5
	// 直播预约
	AddOnCardShowType_reserve AddOnCardShowType = 6
)

// Enum value maps for AddOnCardShowType.
var (
	AddOnCardShowType_name = map[int32]string{
		0: "AddOnCardShowTypeUnknown",
		1: "goods",
		2: "related",
		3: "vote",
		4: "match",
		5: "video",
		6: "reserve",
	}
	AddOnCardShowType_value = map[string]int32{
		"AddOnCardShowTypeUnknown": 0,
		"goods":                    1,
		"related":                  2,
		"vote":                     3,
		"match":                    4,
		"video":                    5,
		"reserve":                  6,
	}
)

func (x AddOnCardShowType) Enum() *AddOnCardShowType {
	p := new(AddOnCardShowType)
	*p = x
	return p
}

func (x AddOnCardShowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddOnCardShowType) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_bilibili_bilibili_proto_enumTypes[5].Descriptor()
}

func (AddOnCardShowType) Type() protoreflect.EnumType {
	return &file_lsp_bilibili_bilibili_proto_enumTypes[5]
}

func (x AddOnCardShowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddOnCardShowType.Descriptor instead.
func (AddOnCardShowType) EnumDescriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{5}
}

type XSpaceAccInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *XSpaceAccInfoResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *XSpaceAccInfoResponse) Reset() {
	*x = XSpaceAccInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSpaceAccInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSpaceAccInfoResponse) ProtoMessage() {}

func (x *XSpaceAccInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSpaceAccInfoResponse.ProtoReflect.Descriptor instead.
func (*XSpaceAccInfoResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{0}
}

func (x *XSpaceAccInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *XSpaceAccInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *XSpaceAccInfoResponse) GetData() *XSpaceAccInfoResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type FeedListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *FeedListResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FeedListResponse) Reset() {
	*x = FeedListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedListResponse) ProtoMessage() {}

func (x *FeedListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedListResponse.ProtoReflect.Descriptor instead.
func (*FeedListResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{1}
}

func (x *FeedListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FeedListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FeedListResponse) GetData() *FeedListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appkey string `protobuf:"bytes,1,opt,name=appkey,proto3" json:"appkey,omitempty"`
	Sign   string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *GetKeyRequest) Reset() {
	*x = GetKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyRequest) ProtoMessage() {}

func (x *GetKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyRequest.ProtoReflect.Descriptor instead.
func (*GetKeyRequest) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{2}
}

func (x *GetKeyRequest) GetAppkey() string {
	if x != nil {
		return x.Appkey
	}
	return ""
}

func (x *GetKeyRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type GetKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts   int64                `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Code int32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data *GetKeyResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetKeyResponse) Reset() {
	*x = GetKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyResponse) ProtoMessage() {}

func (x *GetKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyResponse.ProtoReflect.Descriptor instead.
func (*GetKeyResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{3}
}

func (x *GetKeyResponse) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *GetKeyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetKeyResponse) GetData() *GetKeyResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appkey string `protobuf:"bytes,1,opt,name=appkey,proto3" json:"appkey,omitempty"`
	Build  int32  `protobuf:"varint,2,opt,name=build,proto3" json:"build,omitempty"`
	// string captcha = 3;
	// string challenge = 4;
	Channel string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Device  string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	// string mobi_app = 7;
	Password   string `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Permission string `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	Platform   string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	// string seccode = 11;
	Subid    int32  `protobuf:"varint,12,opt,name=subid,proto3" json:"subid,omitempty"`
	Ts       int32  `protobuf:"varint,13,opt,name=ts,proto3" json:"ts,omitempty"`
	Username string `protobuf:"bytes,14,opt,name=username,proto3" json:"username,omitempty"` //  string validate = 15;
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{4}
}

func (x *LoginRequest) GetAppkey() string {
	if x != nil {
		return x.Appkey
	}
	return ""
}

func (x *LoginRequest) GetBuild() int32 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *LoginRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *LoginRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *LoginRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *LoginRequest) GetSubid() int32 {
	if x != nil {
		return x.Subid
	}
	return 0
}

func (x *LoginRequest) GetTs() int32 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts      int32               `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Code    int32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data    *LoginResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Message string              `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{5}
}

func (x *LoginResponse) GetTs() int32 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *LoginResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginResponse) GetData() *LoginResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type XRelationStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *XRelationStatResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *XRelationStatResponse) Reset() {
	*x = XRelationStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRelationStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRelationStatResponse) ProtoMessage() {}

func (x *XRelationStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRelationStatResponse.ProtoReflect.Descriptor instead.
func (*XRelationStatResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{6}
}

func (x *XRelationStatResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *XRelationStatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *XRelationStatResponse) GetData() *XRelationStatResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card    string        `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	Desc    *Card_Desc    `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Extra   *Card_Extra   `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`
	Display *Card_Display `protobuf:"bytes,6,opt,name=display,proto3" json:"display,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7}
}

func (x *Card) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *Card) GetDesc() *Card_Desc {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *Card) GetExtra() *Card_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Card) GetDisplay() *Card_Display {
	if x != nil {
		return x.Display
	}
	return nil
}

type DynamicSvrSpaceHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DynamicSvrSpaceHistoryResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DynamicSvrSpaceHistoryResponse) Reset() {
	*x = DynamicSvrSpaceHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSvrSpaceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSvrSpaceHistoryResponse) ProtoMessage() {}

func (x *DynamicSvrSpaceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSvrSpaceHistoryResponse.ProtoReflect.Descriptor instead.
func (*DynamicSvrSpaceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{8}
}

func (x *DynamicSvrSpaceHistoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DynamicSvrSpaceHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DynamicSvrSpaceHistoryResponse) GetData() *DynamicSvrSpaceHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DynamicSvrDynamicNewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DynamicSvrDynamicNewResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DynamicSvrDynamicNewResponse) Reset() {
	*x = DynamicSvrDynamicNewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSvrDynamicNewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSvrDynamicNewResponse) ProtoMessage() {}

func (x *DynamicSvrDynamicNewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSvrDynamicNewResponse.ProtoReflect.Descriptor instead.
func (*DynamicSvrDynamicNewResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{9}
}

func (x *DynamicSvrDynamicNewResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DynamicSvrDynamicNewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DynamicSvrDynamicNewResponse) GetData() *DynamicSvrDynamicNewResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DynamicSvrDynamicHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DynamicSvrDynamicHistoryResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DynamicSvrDynamicHistoryResponse) Reset() {
	*x = DynamicSvrDynamicHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSvrDynamicHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSvrDynamicHistoryResponse) ProtoMessage() {}

func (x *DynamicSvrDynamicHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSvrDynamicHistoryResponse.ProtoReflect.Descriptor instead.
func (*DynamicSvrDynamicHistoryResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{10}
}

func (x *DynamicSvrDynamicHistoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DynamicSvrDynamicHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DynamicSvrDynamicHistoryResponse) GetData() *DynamicSvrDynamicHistoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type RelationModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int64  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *RelationModifyResponse) Reset() {
	*x = RelationModifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationModifyResponse) ProtoMessage() {}

func (x *RelationModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationModifyResponse.ProtoReflect.Descriptor instead.
func (*RelationModifyResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{11}
}

func (x *RelationModifyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RelationModifyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RelationModifyResponse) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type GetAttentionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetAttentionListResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAttentionListResponse) Reset() {
	*x = GetAttentionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttentionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttentionListResponse) ProtoMessage() {}

func (x *GetAttentionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttentionListResponse.ProtoReflect.Descriptor instead.
func (*GetAttentionListResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{12}
}

func (x *GetAttentionListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAttentionListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAttentionListResponse) GetData() *GetAttentionListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebInterfaceNavResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ttl     int64                         `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Data    *WebInterfaceNavResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebInterfaceNavResponse) Reset() {
	*x = WebInterfaceNavResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebInterfaceNavResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebInterfaceNavResponse) ProtoMessage() {}

func (x *WebInterfaceNavResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebInterfaceNavResponse.ProtoReflect.Descriptor instead.
func (*WebInterfaceNavResponse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{13}
}

func (x *WebInterfaceNavResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebInterfaceNavResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WebInterfaceNavResponse) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *WebInterfaceNavResponse) GetData() *WebInterfaceNavResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CardWithImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *CardWithImage_Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CardWithImage) Reset() {
	*x = CardWithImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithImage) ProtoMessage() {}

func (x *CardWithImage) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithImage.ProtoReflect.Descriptor instead.
func (*CardWithImage) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{14}
}

func (x *CardWithImage) GetItem() *CardWithImage_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type CardWithOrig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       *CardWithOrig_Item       `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Origin     string                   `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	OriginUser *CardWithOrig_OriginUser `protobuf:"bytes,3,opt,name=origin_user,json=originUser,proto3" json:"origin_user,omitempty"`
}

func (x *CardWithOrig) Reset() {
	*x = CardWithOrig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithOrig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithOrig) ProtoMessage() {}

func (x *CardWithOrig) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithOrig.ProtoReflect.Descriptor instead.
func (*CardWithOrig) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{15}
}

func (x *CardWithOrig) GetItem() *CardWithOrig_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CardWithOrig) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CardWithOrig) GetOriginUser() *CardWithOrig_OriginUser {
	if x != nil {
		return x.OriginUser
	}
	return nil
}

type CardWithVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc     string                `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Duration int32                 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Dynamic  string                `protobuf:"bytes,3,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Pubdate  int64                 `protobuf:"varint,4,opt,name=pubdate,proto3" json:"pubdate,omitempty"`
	Title    string                `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Tname    string                `protobuf:"bytes,6,opt,name=tname,proto3" json:"tname,omitempty"`
	Videos   int32                 `protobuf:"varint,7,opt,name=videos,proto3" json:"videos,omitempty"`
	Pic      string                `protobuf:"bytes,8,opt,name=pic,proto3" json:"pic,omitempty"`
	Origin   *CardWithVideo_Origin `protobuf:"bytes,9,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *CardWithVideo) Reset() {
	*x = CardWithVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithVideo) ProtoMessage() {}

func (x *CardWithVideo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithVideo.ProtoReflect.Descriptor instead.
func (*CardWithVideo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{16}
}

func (x *CardWithVideo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CardWithVideo) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CardWithVideo) GetDynamic() string {
	if x != nil {
		return x.Dynamic
	}
	return ""
}

func (x *CardWithVideo) GetPubdate() int64 {
	if x != nil {
		return x.Pubdate
	}
	return 0
}

func (x *CardWithVideo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithVideo) GetTname() string {
	if x != nil {
		return x.Tname
	}
	return ""
}

func (x *CardWithVideo) GetVideos() int32 {
	if x != nil {
		return x.Videos
	}
	return 0
}

func (x *CardWithVideo) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *CardWithVideo) GetOrigin() *CardWithVideo_Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type CardTextOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *CardTextOnly_Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CardTextOnly) Reset() {
	*x = CardTextOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTextOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTextOnly) ProtoMessage() {}

func (x *CardTextOnly) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTextOnly.ProtoReflect.Descriptor instead.
func (*CardTextOnly) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{17}
}

func (x *CardTextOnly) GetItem() *CardTextOnly_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type CardWithPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Summary     string   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	ImageUrls   []string `protobuf:"bytes,3,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	BannerUrl   string   `protobuf:"bytes,4,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	PublishTime int64    `protobuf:"varint,5,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
}

func (x *CardWithPost) Reset() {
	*x = CardWithPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithPost) ProtoMessage() {}

func (x *CardWithPost) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithPost.ProtoReflect.Descriptor instead.
func (*CardWithPost) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{18}
}

func (x *CardWithPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithPost) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CardWithPost) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *CardWithPost) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *CardWithPost) GetPublishTime() int64 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

type CardWithMusic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author      string              `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Cover       string              `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Ctime       int64               `protobuf:"varint,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Id          int64               `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Intro       string              `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	Item        *CardWithMusic_Item `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`
	PlayCnt     int64               `protobuf:"varint,7,opt,name=playCnt,proto3" json:"playCnt,omitempty"`
	ReplyCnt    int64               `protobuf:"varint,8,opt,name=replyCnt,proto3" json:"replyCnt,omitempty"`
	Schema      string              `protobuf:"bytes,9,opt,name=schema,proto3" json:"schema,omitempty"`
	Title       string              `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	TypeInfo    string              `protobuf:"bytes,11,opt,name=typeInfo,proto3" json:"typeInfo,omitempty"`
	UpId        int64               `protobuf:"varint,12,opt,name=upId,proto3" json:"upId,omitempty"`
	Upper       string              `protobuf:"bytes,13,opt,name=upper,proto3" json:"upper,omitempty"`
	UpperAvatar string              `protobuf:"bytes,14,opt,name=upperAvatar,proto3" json:"upperAvatar,omitempty"`
}

func (x *CardWithMusic) Reset() {
	*x = CardWithMusic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithMusic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithMusic) ProtoMessage() {}

func (x *CardWithMusic) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithMusic.ProtoReflect.Descriptor instead.
func (*CardWithMusic) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{19}
}

func (x *CardWithMusic) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CardWithMusic) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithMusic) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *CardWithMusic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardWithMusic) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *CardWithMusic) GetItem() *CardWithMusic_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CardWithMusic) GetPlayCnt() int64 {
	if x != nil {
		return x.PlayCnt
	}
	return 0
}

func (x *CardWithMusic) GetReplyCnt() int64 {
	if x != nil {
		return x.ReplyCnt
	}
	return 0
}

func (x *CardWithMusic) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *CardWithMusic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithMusic) GetTypeInfo() string {
	if x != nil {
		return x.TypeInfo
	}
	return ""
}

func (x *CardWithMusic) GetUpId() int64 {
	if x != nil {
		return x.UpId
	}
	return 0
}

func (x *CardWithMusic) GetUpper() string {
	if x != nil {
		return x.Upper
	}
	return ""
}

func (x *CardWithMusic) GetUpperAvatar() string {
	if x != nil {
		return x.UpperAvatar
	}
	return ""
}

// 包括动漫，纪录片，电影等，总之可以解析试试
type CardWithMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiSeasonInfo *CardWithMedia_ApiSeasonInfo `protobuf:"bytes,1,opt,name=apiSeasonInfo,proto3" json:"apiSeasonInfo,omitempty"`
	BulletCount   int64                        `protobuf:"varint,2,opt,name=bullet_count,json=bulletCount,proto3" json:"bullet_count,omitempty"`
	Cover         string                       `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	EpisodeId     int64                        `protobuf:"varint,4,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	Index         string                       `protobuf:"bytes,5,opt,name=index,proto3" json:"index,omitempty"`
	IndexTitle    string                       `protobuf:"bytes,6,opt,name=index_title,json=indexTitle,proto3" json:"index_title,omitempty"`
	NewDesc       string                       `protobuf:"bytes,7,opt,name=new_desc,json=newDesc,proto3" json:"new_desc,omitempty"`
	// int64 online_finish = 8;
	PlayCount  int64  `protobuf:"varint,9,opt,name=play_count,json=playCount,proto3" json:"play_count,omitempty"`
	ReplyCount int64  `protobuf:"varint,10,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	Url        string `protobuf:"bytes,11,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CardWithMedia) Reset() {
	*x = CardWithMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithMedia) ProtoMessage() {}

func (x *CardWithMedia) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithMedia.ProtoReflect.Descriptor instead.
func (*CardWithMedia) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{20}
}

func (x *CardWithMedia) GetApiSeasonInfo() *CardWithMedia_ApiSeasonInfo {
	if x != nil {
		return x.ApiSeasonInfo
	}
	return nil
}

func (x *CardWithMedia) GetBulletCount() int64 {
	if x != nil {
		return x.BulletCount
	}
	return 0
}

func (x *CardWithMedia) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithMedia) GetEpisodeId() int64 {
	if x != nil {
		return x.EpisodeId
	}
	return 0
}

func (x *CardWithMedia) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *CardWithMedia) GetIndexTitle() string {
	if x != nil {
		return x.IndexTitle
	}
	return ""
}

func (x *CardWithMedia) GetNewDesc() string {
	if x != nil {
		return x.NewDesc
	}
	return ""
}

func (x *CardWithMedia) GetPlayCount() int64 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *CardWithMedia) GetReplyCount() int64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *CardWithMedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CardWithSketch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vest   *CardWithSketch_Vest   `protobuf:"bytes,1,opt,name=vest,proto3" json:"vest,omitempty"`
	Sketch *CardWithSketch_Sketch `protobuf:"bytes,2,opt,name=sketch,proto3" json:"sketch,omitempty"`
}

func (x *CardWithSketch) Reset() {
	*x = CardWithSketch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithSketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithSketch) ProtoMessage() {}

func (x *CardWithSketch) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithSketch.ProtoReflect.Descriptor instead.
func (*CardWithSketch) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{21}
}

func (x *CardWithSketch) GetVest() *CardWithSketch_Vest {
	if x != nil {
		return x.Vest
	}
	return nil
}

func (x *CardWithSketch) GetSketch() *CardWithSketch_Sketch {
	if x != nil {
		return x.Sketch
	}
	return nil
}

type CardWithLive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid      int64       `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Uid         int64       `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Uname       string      `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname,omitempty"`
	Cover       string      `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Title       string      `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	AreaV2Name  string      `protobuf:"bytes,6,opt,name=area_v2_name,json=areaV2Name,proto3" json:"area_v2_name,omitempty"`
	LiveStatus  LiveStatus  `protobuf:"varint,7,opt,name=live_status,json=liveStatus,proto3,enum=bilibili.LiveStatus" json:"live_status,omitempty"`
	RoundStatus RoundStatus `protobuf:"varint,8,opt,name=round_status,json=roundStatus,proto3,enum=bilibili.RoundStatus" json:"round_status,omitempty"`
}

func (x *CardWithLive) Reset() {
	*x = CardWithLive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithLive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithLive) ProtoMessage() {}

func (x *CardWithLive) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithLive.ProtoReflect.Descriptor instead.
func (*CardWithLive) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{22}
}

func (x *CardWithLive) GetRoomid() int64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *CardWithLive) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CardWithLive) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *CardWithLive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithLive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithLive) GetAreaV2Name() string {
	if x != nil {
		return x.AreaV2Name
	}
	return ""
}

func (x *CardWithLive) GetLiveStatus() LiveStatus {
	if x != nil {
		return x.LiveStatus
	}
	return LiveStatus_NoLiving
}

func (x *CardWithLive) GetRoundStatus() RoundStatus {
	if x != nil {
		return x.RoundStatus
	}
	return RoundStatus_Off
}

type CardWithMylist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover      string                `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	CoverType  int32                 `protobuf:"varint,2,opt,name=cover_type,json=coverType,proto3" json:"cover_type,omitempty"`
	Fid        int64                 `protobuf:"varint,3,opt,name=fid,proto3" json:"fid,omitempty"`
	Id         int64                 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Intro      string                `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	MediaCount int32                 `protobuf:"varint,6,opt,name=media_count,json=mediaCount,proto3" json:"media_count,omitempty"`
	Mid        int64                 `protobuf:"varint,7,opt,name=mid,proto3" json:"mid,omitempty"`
	Sharable   bool                  `protobuf:"varint,8,opt,name=sharable,proto3" json:"sharable,omitempty"`
	Title      string                `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	Type       int32                 `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Upper      *CardWithMylist_Upper `protobuf:"bytes,11,opt,name=upper,proto3" json:"upper,omitempty"`
}

func (x *CardWithMylist) Reset() {
	*x = CardWithMylist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithMylist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithMylist) ProtoMessage() {}

func (x *CardWithMylist) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithMylist.ProtoReflect.Descriptor instead.
func (*CardWithMylist) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{23}
}

func (x *CardWithMylist) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithMylist) GetCoverType() int32 {
	if x != nil {
		return x.CoverType
	}
	return 0
}

func (x *CardWithMylist) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *CardWithMylist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardWithMylist) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *CardWithMylist) GetMediaCount() int32 {
	if x != nil {
		return x.MediaCount
	}
	return 0
}

func (x *CardWithMylist) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CardWithMylist) GetSharable() bool {
	if x != nil {
		return x.Sharable
	}
	return false
}

func (x *CardWithMylist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithMylist) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CardWithMylist) GetUpper() *CardWithMylist_Upper {
	if x != nil {
		return x.Upper
	}
	return nil
}

// 可能是新版直播间 （x）
// 发现是系统推荐的直播间，应该忽略吧？
type CardWithLiveV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LivePlayInfo *CardWithLiveV2_LivePlayInfo `protobuf:"bytes,1,opt,name=live_play_info,json=livePlayInfo,proto3" json:"live_play_info,omitempty"`
	Style        int64                        `protobuf:"varint,2,opt,name=style,proto3" json:"style,omitempty"`
	Type         int64                        `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CardWithLiveV2) Reset() {
	*x = CardWithLiveV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithLiveV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithLiveV2) ProtoMessage() {}

func (x *CardWithLiveV2) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithLiveV2.ProtoReflect.Descriptor instead.
func (*CardWithLiveV2) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{24}
}

func (x *CardWithLiveV2) GetLivePlayInfo() *CardWithLiveV2_LivePlayInfo {
	if x != nil {
		return x.LivePlayInfo
	}
	return nil
}

func (x *CardWithLiveV2) GetStyle() int64 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *CardWithLiveV2) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type CardWithCourse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge       *CardWithCourse_Badge  `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	Cover       string                 `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	EpCount     int32                  `protobuf:"varint,3,opt,name=ep_count,json=epCount,proto3" json:"ep_count,omitempty"`
	Subtitle    string                 `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Title       string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	UpInfo      *CardWithCourse_UpInfo `protobuf:"bytes,6,opt,name=up_info,json=upInfo,proto3" json:"up_info,omitempty"`
	UpdateCount int32                  `protobuf:"varint,7,opt,name=update_count,json=updateCount,proto3" json:"update_count,omitempty"`
	UpdateInfo  string                 `protobuf:"bytes,8,opt,name=update_info,json=updateInfo,proto3" json:"update_info,omitempty"`
	Url         string                 `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CardWithCourse) Reset() {
	*x = CardWithCourse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithCourse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithCourse) ProtoMessage() {}

func (x *CardWithCourse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithCourse.ProtoReflect.Descriptor instead.
func (*CardWithCourse) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{25}
}

func (x *CardWithCourse) GetBadge() *CardWithCourse_Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *CardWithCourse) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithCourse) GetEpCount() int32 {
	if x != nil {
		return x.EpCount
	}
	return 0
}

func (x *CardWithCourse) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *CardWithCourse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithCourse) GetUpInfo() *CardWithCourse_UpInfo {
	if x != nil {
		return x.UpInfo
	}
	return nil
}

func (x *CardWithCourse) GetUpdateCount() int32 {
	if x != nil {
		return x.UpdateCount
	}
	return 0
}

func (x *CardWithCourse) GetUpdateInfo() string {
	if x != nil {
		return x.UpdateInfo
	}
	return ""
}

func (x *CardWithCourse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type XSpaceAccInfoResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid      int64                                `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name     string                               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level    int32                                `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	LiveRoom *XSpaceAccInfoResponse_Data_LiveRoom `protobuf:"bytes,17,opt,name=live_room,json=liveRoom,proto3" json:"live_room,omitempty"`
}

func (x *XSpaceAccInfoResponse_Data) Reset() {
	*x = XSpaceAccInfoResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSpaceAccInfoResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSpaceAccInfoResponse_Data) ProtoMessage() {}

func (x *XSpaceAccInfoResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSpaceAccInfoResponse_Data.ProtoReflect.Descriptor instead.
func (*XSpaceAccInfoResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{0, 0}
}

func (x *XSpaceAccInfoResponse_Data) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *XSpaceAccInfoResponse_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XSpaceAccInfoResponse_Data) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *XSpaceAccInfoResponse_Data) GetLiveRoom() *XSpaceAccInfoResponse_Data_LiveRoom {
	if x != nil {
		return x.LiveRoom
	}
	return nil
}

type XSpaceAccInfoResponse_Data_LiveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomStatus  RoomStatus  `protobuf:"varint,1,opt,name=roomStatus,proto3,enum=bilibili.RoomStatus" json:"roomStatus,omitempty"`
	LiveStatus  LiveStatus  `protobuf:"varint,2,opt,name=liveStatus,proto3,enum=bilibili.LiveStatus" json:"liveStatus,omitempty"`
	Url         string      `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Title       string      `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Cover       string      `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Roomid      int64       `protobuf:"varint,6,opt,name=roomid,proto3" json:"roomid,omitempty"`
	RoundStatus RoundStatus `protobuf:"varint,7,opt,name=roundStatus,proto3,enum=bilibili.RoundStatus" json:"roundStatus,omitempty"`
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) Reset() {
	*x = XSpaceAccInfoResponse_Data_LiveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSpaceAccInfoResponse_Data_LiveRoom) ProtoMessage() {}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSpaceAccInfoResponse_Data_LiveRoom.ProtoReflect.Descriptor instead.
func (*XSpaceAccInfoResponse_Data_LiveRoom) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetRoomStatus() RoomStatus {
	if x != nil {
		return x.RoomStatus
	}
	return RoomStatus_NonExist
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetLiveStatus() LiveStatus {
	if x != nil {
		return x.LiveStatus
	}
	return LiveStatus_NoLiving
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetRoomid() int64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *XSpaceAccInfoResponse_Data_LiveRoom) GetRoundStatus() RoundStatus {
	if x != nil {
		return x.RoundStatus
	}
	return RoundStatus_Off
}

type FeedListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results  int32                             `protobuf:"varint,1,opt,name=results,proto3" json:"results,omitempty"`
	Page     string                            `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize string                            `protobuf:"bytes,3,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	List     []*FeedListResponse_Data_ListInfo `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FeedListResponse_Data) Reset() {
	*x = FeedListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedListResponse_Data) ProtoMessage() {}

func (x *FeedListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedListResponse_Data.ProtoReflect.Descriptor instead.
func (*FeedListResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FeedListResponse_Data) GetResults() int32 {
	if x != nil {
		return x.Results
	}
	return 0
}

func (x *FeedListResponse_Data) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *FeedListResponse_Data) GetPagesize() string {
	if x != nil {
		return x.Pagesize
	}
	return ""
}

func (x *FeedListResponse_Data) GetList() []*FeedListResponse_Data_ListInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type FeedListResponse_Data_ListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover        string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	Face         string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	Uname        string `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Roomid       int64  `protobuf:"varint,5,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Pic          string `protobuf:"bytes,6,opt,name=pic,proto3" json:"pic,omitempty"`
	Online       int64  `protobuf:"varint,7,opt,name=online,proto3" json:"online,omitempty"`
	Link         string `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	Uid          int64  `protobuf:"varint,9,opt,name=uid,proto3" json:"uid,omitempty"`
	ParentAreaId int64  `protobuf:"varint,10,opt,name=parent_area_id,json=parentAreaId,proto3" json:"parent_area_id,omitempty"`
	AreaId       int64  `protobuf:"varint,11,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
}

func (x *FeedListResponse_Data_ListInfo) Reset() {
	*x = FeedListResponse_Data_ListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedListResponse_Data_ListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedListResponse_Data_ListInfo) ProtoMessage() {}

func (x *FeedListResponse_Data_ListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedListResponse_Data_ListInfo.ProtoReflect.Descriptor instead.
func (*FeedListResponse_Data_ListInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *FeedListResponse_Data_ListInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FeedListResponse_Data_ListInfo) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *FeedListResponse_Data_ListInfo) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *FeedListResponse_Data_ListInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FeedListResponse_Data_ListInfo) GetRoomid() int64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *FeedListResponse_Data_ListInfo) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *FeedListResponse_Data_ListInfo) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *FeedListResponse_Data_ListInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *FeedListResponse_Data_ListInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FeedListResponse_Data_ListInfo) GetParentAreaId() int64 {
	if x != nil {
		return x.ParentAreaId
	}
	return 0
}

func (x *FeedListResponse_Data_ListInfo) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

type GetKeyResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKeyResponse_Data) Reset() {
	*x = GetKeyResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyResponse_Data) ProtoMessage() {}

func (x *GetKeyResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyResponse_Data.ProtoReflect.Descriptor instead.
func (*GetKeyResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetKeyResponse_Data) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetKeyResponse_Data) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoginResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int32                          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TokenInfo  *LoginResponse_Data_TokenInfo  `protobuf:"bytes,2,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
	CookieInfo *LoginResponse_Data_CookieInfo `protobuf:"bytes,3,opt,name=cookie_info,json=cookieInfo,proto3" json:"cookie_info,omitempty"`
	Sso        []string                       `protobuf:"bytes,4,rep,name=sso,proto3" json:"sso,omitempty"`
	Message    string                         `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Url        string                         `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *LoginResponse_Data) Reset() {
	*x = LoginResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_Data) ProtoMessage() {}

func (x *LoginResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_Data.ProtoReflect.Descriptor instead.
func (*LoginResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{5, 0}
}

func (x *LoginResponse_Data) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LoginResponse_Data) GetTokenInfo() *LoginResponse_Data_TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

func (x *LoginResponse_Data) GetCookieInfo() *LoginResponse_Data_CookieInfo {
	if x != nil {
		return x.CookieInfo
	}
	return nil
}

func (x *LoginResponse_Data) GetSso() []string {
	if x != nil {
		return x.Sso
	}
	return nil
}

func (x *LoginResponse_Data) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LoginResponse_Data) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type LoginResponse_Data_TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid          int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn    int64  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
}

func (x *LoginResponse_Data_TokenInfo) Reset() {
	*x = LoginResponse_Data_TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_Data_TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_Data_TokenInfo) ProtoMessage() {}

func (x *LoginResponse_Data_TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_Data_TokenInfo.ProtoReflect.Descriptor instead.
func (*LoginResponse_Data_TokenInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *LoginResponse_Data_TokenInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *LoginResponse_Data_TokenInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse_Data_TokenInfo) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse_Data_TokenInfo) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type LoginResponse_Data_CookieInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies []*LoginResponse_Data_CookieInfo_Cookie `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty"`
	Domains []string                                `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *LoginResponse_Data_CookieInfo) Reset() {
	*x = LoginResponse_Data_CookieInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_Data_CookieInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_Data_CookieInfo) ProtoMessage() {}

func (x *LoginResponse_Data_CookieInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_Data_CookieInfo.ProtoReflect.Descriptor instead.
func (*LoginResponse_Data_CookieInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{5, 0, 1}
}

func (x *LoginResponse_Data_CookieInfo) GetCookies() []*LoginResponse_Data_CookieInfo_Cookie {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *LoginResponse_Data_CookieInfo) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type LoginResponse_Data_CookieInfo_Cookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	HttpOnly int32  `protobuf:"varint,3,opt,name=http_only,json=httpOnly,proto3" json:"http_only,omitempty"`
	Expires  int64  `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`
}

func (x *LoginResponse_Data_CookieInfo_Cookie) Reset() {
	*x = LoginResponse_Data_CookieInfo_Cookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse_Data_CookieInfo_Cookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse_Data_CookieInfo_Cookie) ProtoMessage() {}

func (x *LoginResponse_Data_CookieInfo_Cookie) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse_Data_CookieInfo_Cookie.ProtoReflect.Descriptor instead.
func (*LoginResponse_Data_CookieInfo_Cookie) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{5, 0, 1, 0}
}

func (x *LoginResponse_Data_CookieInfo_Cookie) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginResponse_Data_CookieInfo_Cookie) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LoginResponse_Data_CookieInfo_Cookie) GetHttpOnly() int32 {
	if x != nil {
		return x.HttpOnly
	}
	return 0
}

func (x *LoginResponse_Data_CookieInfo_Cookie) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type XRelationStatResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid       int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Following int64 `protobuf:"varint,2,opt,name=following,proto3" json:"following,omitempty"`
	Follower  int64 `protobuf:"varint,3,opt,name=follower,proto3" json:"follower,omitempty"`
}

func (x *XRelationStatResponse_Data) Reset() {
	*x = XRelationStatResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRelationStatResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRelationStatResponse_Data) ProtoMessage() {}

func (x *XRelationStatResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRelationStatResponse_Data.ProtoReflect.Descriptor instead.
func (*XRelationStatResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{6, 0}
}

func (x *XRelationStatResponse_Data) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *XRelationStatResponse_Data) GetFollowing() int64 {
	if x != nil {
		return x.Following
	}
	return 0
}

func (x *XRelationStatResponse_Data) GetFollower() int64 {
	if x != nil {
		return x.Follower
	}
	return 0
}

type Card_Desc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId    int64                  `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	OrigDyId     int64                  `protobuf:"varint,2,opt,name=orig_dy_id,json=origDyId,proto3" json:"orig_dy_id,omitempty"`
	OrigType     DynamicDescType        `protobuf:"varint,3,opt,name=orig_type,json=origType,proto3,enum=bilibili.DynamicDescType" json:"orig_type,omitempty"`
	PreDyId      int64                  `protobuf:"varint,4,opt,name=pre_dy_id,json=preDyId,proto3" json:"pre_dy_id,omitempty"`
	Comment      int32                  `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Like         int32                  `protobuf:"varint,6,opt,name=like,proto3" json:"like,omitempty"`
	View         int32                  `protobuf:"varint,7,opt,name=view,proto3" json:"view,omitempty"`
	Repost       int32                  `protobuf:"varint,8,opt,name=repost,proto3" json:"repost,omitempty"`
	Timestamp    int64                  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type         DynamicDescType        `protobuf:"varint,10,opt,name=type,proto3,enum=bilibili.DynamicDescType" json:"type,omitempty"`
	Bvid         string                 `protobuf:"bytes,11,opt,name=bvid,proto3" json:"bvid,omitempty"`
	DynamicIdStr string                 `protobuf:"bytes,12,opt,name=dynamic_id_str,json=dynamicIdStr,proto3" json:"dynamic_id_str,omitempty"`
	Uid          int64                  `protobuf:"varint,13,opt,name=uid,proto3" json:"uid,omitempty"`
	UserProfile  *Card_Desc_UserProfile `protobuf:"bytes,14,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	PreDyIdStr   string                 `protobuf:"bytes,15,opt,name=pre_dy_id_str,json=preDyIdStr,proto3" json:"pre_dy_id_str,omitempty"`
	OrigDyIdStr  string                 `protobuf:"bytes,16,opt,name=orig_dy_id_str,json=origDyIdStr,proto3" json:"orig_dy_id_str,omitempty"`
	RidStr       string                 `protobuf:"bytes,17,opt,name=rid_str,json=ridStr,proto3" json:"rid_str,omitempty"`
}

func (x *Card_Desc) Reset() {
	*x = Card_Desc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Desc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Desc) ProtoMessage() {}

func (x *Card_Desc) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Desc.ProtoReflect.Descriptor instead.
func (*Card_Desc) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Card_Desc) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *Card_Desc) GetOrigDyId() int64 {
	if x != nil {
		return x.OrigDyId
	}
	return 0
}

func (x *Card_Desc) GetOrigType() DynamicDescType {
	if x != nil {
		return x.OrigType
	}
	return DynamicDescType_DynamicDescTypeUnknown
}

func (x *Card_Desc) GetPreDyId() int64 {
	if x != nil {
		return x.PreDyId
	}
	return 0
}

func (x *Card_Desc) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *Card_Desc) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Card_Desc) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Card_Desc) GetRepost() int32 {
	if x != nil {
		return x.Repost
	}
	return 0
}

func (x *Card_Desc) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Card_Desc) GetType() DynamicDescType {
	if x != nil {
		return x.Type
	}
	return DynamicDescType_DynamicDescTypeUnknown
}

func (x *Card_Desc) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *Card_Desc) GetDynamicIdStr() string {
	if x != nil {
		return x.DynamicIdStr
	}
	return ""
}

func (x *Card_Desc) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Card_Desc) GetUserProfile() *Card_Desc_UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

func (x *Card_Desc) GetPreDyIdStr() string {
	if x != nil {
		return x.PreDyIdStr
	}
	return ""
}

func (x *Card_Desc) GetOrigDyIdStr() string {
	if x != nil {
		return x.OrigDyIdStr
	}
	return ""
}

func (x *Card_Desc) GetRidStr() string {
	if x != nil {
		return x.RidStr
	}
	return ""
}

type Card_Extra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSpaceTop int32 `protobuf:"varint,1,opt,name=is_space_top,json=isSpaceTop,proto3" json:"is_space_top,omitempty"`
}

func (x *Card_Extra) Reset() {
	*x = Card_Extra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Extra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Extra) ProtoMessage() {}

func (x *Card_Extra) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Extra.ProtoReflect.Descriptor instead.
func (*Card_Extra) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Card_Extra) GetIsSpaceTop() int32 {
	if x != nil {
		return x.IsSpaceTop
	}
	return 0
}

type Card_Display struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiInfo *Card_Display_EmojiInfo `protobuf:"bytes,1,opt,name=emoji_info,json=emojiInfo,proto3" json:"emoji_info,omitempty"`
	LikeInfo  *Card_Display_LikeInfo  `protobuf:"bytes,2,opt,name=like_info,json=likeInfo,proto3" json:"like_info,omitempty"`
	Origin    *Card_Display_Origin    `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	// 可能是新增的功能，会在动态下面加一个小卡片，目前如预约直播显示信息，发起投票的投票内容缩略，游戏官方动态下面的相关游戏
	AddOnCardInfo []*Card_Display_AddOnCardInfo `protobuf:"bytes,4,rep,name=add_on_card_info,json=addOnCardInfo,proto3" json:"add_on_card_info,omitempty"`
	UsrActionTxt  string                        `protobuf:"bytes,5,opt,name=usr_action_txt,json=usrActionTxt,proto3" json:"usr_action_txt,omitempty"`
}

func (x *Card_Display) Reset() {
	*x = Card_Display{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display) ProtoMessage() {}

func (x *Card_Display) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display.ProtoReflect.Descriptor instead.
func (*Card_Display) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Card_Display) GetEmojiInfo() *Card_Display_EmojiInfo {
	if x != nil {
		return x.EmojiInfo
	}
	return nil
}

func (x *Card_Display) GetLikeInfo() *Card_Display_LikeInfo {
	if x != nil {
		return x.LikeInfo
	}
	return nil
}

func (x *Card_Display) GetOrigin() *Card_Display_Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Card_Display) GetAddOnCardInfo() []*Card_Display_AddOnCardInfo {
	if x != nil {
		return x.AddOnCardInfo
	}
	return nil
}

func (x *Card_Display) GetUsrActionTxt() string {
	if x != nil {
		return x.UsrActionTxt
	}
	return ""
}

type Card_Desc_UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Card_Desc_UserProfile_Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Card_Desc_UserProfile) Reset() {
	*x = Card_Desc_UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Desc_UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Desc_UserProfile) ProtoMessage() {}

func (x *Card_Desc_UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Desc_UserProfile.ProtoReflect.Descriptor instead.
func (*Card_Desc_UserProfile) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *Card_Desc_UserProfile) GetInfo() *Card_Desc_UserProfile_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type Card_Desc_UserProfile_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	Face  string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
}

func (x *Card_Desc_UserProfile_Info) Reset() {
	*x = Card_Desc_UserProfile_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Desc_UserProfile_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Desc_UserProfile_Info) ProtoMessage() {}

func (x *Card_Desc_UserProfile_Info) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Desc_UserProfile_Info.ProtoReflect.Descriptor instead.
func (*Card_Desc_UserProfile_Info) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 0, 0, 0}
}

func (x *Card_Desc_UserProfile_Info) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Card_Desc_UserProfile_Info) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *Card_Desc_UserProfile_Info) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

type Card_Display_EmojiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiDetails []*Card_Display_EmojiInfo_EmojiDetail `protobuf:"bytes,1,rep,name=emoji_details,json=emojiDetails,proto3" json:"emoji_details,omitempty"`
}

func (x *Card_Display_EmojiInfo) Reset() {
	*x = Card_Display_EmojiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_EmojiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_EmojiInfo) ProtoMessage() {}

func (x *Card_Display_EmojiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_EmojiInfo.ProtoReflect.Descriptor instead.
func (*Card_Display_EmojiInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 0}
}

func (x *Card_Display_EmojiInfo) GetEmojiDetails() []*Card_Display_EmojiInfo_EmojiDetail {
	if x != nil {
		return x.EmojiDetails
	}
	return nil
}

type Card_Display_LikeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayText string                            `protobuf:"bytes,1,opt,name=display_text,json=displayText,proto3" json:"display_text,omitempty"`
	LikeUsers   []*Card_Display_LikeInfo_LikeUser `protobuf:"bytes,2,rep,name=like_users,json=likeUsers,proto3" json:"like_users,omitempty"`
}

func (x *Card_Display_LikeInfo) Reset() {
	*x = Card_Display_LikeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_LikeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_LikeInfo) ProtoMessage() {}

func (x *Card_Display_LikeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_LikeInfo.ProtoReflect.Descriptor instead.
func (*Card_Display_LikeInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 1}
}

func (x *Card_Display_LikeInfo) GetDisplayText() string {
	if x != nil {
		return x.DisplayText
	}
	return ""
}

func (x *Card_Display_LikeInfo) GetLikeUsers() []*Card_Display_LikeInfo_LikeUser {
	if x != nil {
		return x.LikeUsers
	}
	return nil
}

// 动态下面附加一个信息
type Card_Display_AddOnCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddOnCardShowType AddOnCardShowType                             `protobuf:"varint,1,opt,name=add_on_card_show_type,json=addOnCardShowType,proto3,enum=bilibili.AddOnCardShowType" json:"add_on_card_show_type,omitempty"`
	ReserveAttachCard *Card_Display_AddOnCardInfo_ReserveAttachCard `protobuf:"bytes,2,opt,name=reserve_attach_card,json=reserveAttachCard,proto3" json:"reserve_attach_card,omitempty"`
	AttachCard        *Card_Display_AddOnCardInfo_AttachCard        `protobuf:"bytes,3,opt,name=attach_card,json=attachCard,proto3" json:"attach_card,omitempty"`
	VoteCard          string                                        `protobuf:"bytes,4,opt,name=vote_card,json=voteCard,proto3" json:"vote_card,omitempty"`
	UgcAttachCard     *Card_Display_AddOnCardInfo_UgcAttachCard     `protobuf:"bytes,5,opt,name=ugc_attach_card,json=ugcAttachCard,proto3" json:"ugc_attach_card,omitempty"`
	GoodsCard         string                                        `protobuf:"bytes,6,opt,name=goods_card,json=goodsCard,proto3" json:"goods_card,omitempty"`
}

func (x *Card_Display_AddOnCardInfo) Reset() {
	*x = Card_Display_AddOnCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2}
}

func (x *Card_Display_AddOnCardInfo) GetAddOnCardShowType() AddOnCardShowType {
	if x != nil {
		return x.AddOnCardShowType
	}
	return AddOnCardShowType_AddOnCardShowTypeUnknown
}

func (x *Card_Display_AddOnCardInfo) GetReserveAttachCard() *Card_Display_AddOnCardInfo_ReserveAttachCard {
	if x != nil {
		return x.ReserveAttachCard
	}
	return nil
}

func (x *Card_Display_AddOnCardInfo) GetAttachCard() *Card_Display_AddOnCardInfo_AttachCard {
	if x != nil {
		return x.AttachCard
	}
	return nil
}

func (x *Card_Display_AddOnCardInfo) GetVoteCard() string {
	if x != nil {
		return x.VoteCard
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo) GetUgcAttachCard() *Card_Display_AddOnCardInfo_UgcAttachCard {
	if x != nil {
		return x.UgcAttachCard
	}
	return nil
}

func (x *Card_Display_AddOnCardInfo) GetGoodsCard() string {
	if x != nil {
		return x.GoodsCard
	}
	return ""
}

type Card_Display_Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiInfo     *Card_Display_EmojiInfo       `protobuf:"bytes,1,opt,name=emoji_info,json=emojiInfo,proto3" json:"emoji_info,omitempty"`
	LikeInfo      *Card_Display_LikeInfo        `protobuf:"bytes,2,opt,name=like_info,json=likeInfo,proto3" json:"like_info,omitempty"`
	Origin        *Card_Display_Origin          `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	AddOnCardInfo []*Card_Display_AddOnCardInfo `protobuf:"bytes,4,rep,name=add_on_card_info,json=addOnCardInfo,proto3" json:"add_on_card_info,omitempty"`
	UsrActionTxt  string                        `protobuf:"bytes,5,opt,name=usr_action_txt,json=usrActionTxt,proto3" json:"usr_action_txt,omitempty"`
}

func (x *Card_Display_Origin) Reset() {
	*x = Card_Display_Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_Origin) ProtoMessage() {}

func (x *Card_Display_Origin) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_Origin.ProtoReflect.Descriptor instead.
func (*Card_Display_Origin) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 3}
}

func (x *Card_Display_Origin) GetEmojiInfo() *Card_Display_EmojiInfo {
	if x != nil {
		return x.EmojiInfo
	}
	return nil
}

func (x *Card_Display_Origin) GetLikeInfo() *Card_Display_LikeInfo {
	if x != nil {
		return x.LikeInfo
	}
	return nil
}

func (x *Card_Display_Origin) GetOrigin() *Card_Display_Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Card_Display_Origin) GetAddOnCardInfo() []*Card_Display_AddOnCardInfo {
	if x != nil {
		return x.AddOnCardInfo
	}
	return nil
}

func (x *Card_Display_Origin) GetUsrActionTxt() string {
	if x != nil {
		return x.UsrActionTxt
	}
	return ""
}

type Card_Display_EmojiInfo_EmojiDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiName string                                   `protobuf:"bytes,1,opt,name=emoji_name,json=emojiName,proto3" json:"emoji_name,omitempty"`
	Id        int32                                    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	PackageId int32                                    `protobuf:"varint,3,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	State     int32                                    `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Type      int32                                    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Text      string                                   `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	Url       string                                   `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Meta      *Card_Display_EmojiInfo_EmojiDetail_Meta `protobuf:"bytes,8,opt,name=meta,proto3" json:"meta,omitempty"`
	Mtime     int64                                    `protobuf:"varint,9,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *Card_Display_EmojiInfo_EmojiDetail) Reset() {
	*x = Card_Display_EmojiInfo_EmojiDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_EmojiInfo_EmojiDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_EmojiInfo_EmojiDetail) ProtoMessage() {}

func (x *Card_Display_EmojiInfo_EmojiDetail) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_EmojiInfo_EmojiDetail.ProtoReflect.Descriptor instead.
func (*Card_Display_EmojiInfo_EmojiDetail) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 0, 0}
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetEmojiName() string {
	if x != nil {
		return x.EmojiName
	}
	return ""
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetPackageId() int32 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetMeta() *Card_Display_EmojiInfo_EmojiDetail_Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Card_Display_EmojiInfo_EmojiDetail) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type Card_Display_EmojiInfo_EmojiDetail_Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Card_Display_EmojiInfo_EmojiDetail_Meta) Reset() {
	*x = Card_Display_EmojiInfo_EmojiDetail_Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_EmojiInfo_EmojiDetail_Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_EmojiInfo_EmojiDetail_Meta) ProtoMessage() {}

func (x *Card_Display_EmojiInfo_EmojiDetail_Meta) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_EmojiInfo_EmojiDetail_Meta.ProtoReflect.Descriptor instead.
func (*Card_Display_EmojiInfo_EmojiDetail_Meta) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 0, 0, 0}
}

func (x *Card_Display_EmojiInfo_EmojiDetail_Meta) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Card_Display_LikeInfo_LikeUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Card_Display_LikeInfo_LikeUser) Reset() {
	*x = Card_Display_LikeInfo_LikeUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_LikeInfo_LikeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_LikeInfo_LikeUser) ProtoMessage() {}

func (x *Card_Display_LikeInfo_LikeUser) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_LikeInfo_LikeUser.ProtoReflect.Descriptor instead.
func (*Card_Display_LikeInfo_LikeUser) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 1, 0}
}

func (x *Card_Display_LikeInfo_LikeUser) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Card_Display_LikeInfo_LikeUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 附加预约信息
type Card_Display_AddOnCardInfo_ReserveAttachCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 预约种类 reserve
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// 预约标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	State int64  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	// 已经有多少人预约了
	ReserveTotal int64 `protobuf:"varint,4,opt,name=reserve_total,json=reserveTotal,proto3" json:"reserve_total,omitempty"`
	// 显示在上面的部分
	DescFirst *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst `protobuf:"bytes,5,opt,name=desc_first,json=descFirst,proto3" json:"desc_first,omitempty"`
	// 显示在下面的部分
	DescSecond        string                                                       `protobuf:"bytes,6,opt,name=desc_second,json=descSecond,proto3" json:"desc_second,omitempty"`
	OidStr            string                                                       `protobuf:"bytes,7,opt,name=oid_str,json=oidStr,proto3" json:"oid_str,omitempty"`
	OriginState       int64                                                        `protobuf:"varint,8,opt,name=origin_state,json=originState,proto3" json:"origin_state,omitempty"`
	Stype             int64                                                        `protobuf:"varint,9,opt,name=stype,proto3" json:"stype,omitempty"`
	LivePlanStartTime int64                                                        `protobuf:"varint,10,opt,name=livePlanStartTime,proto3" json:"livePlanStartTime,omitempty"`
	ReserveLottery    *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery `protobuf:"bytes,11,opt,name=reserve_lottery,json=reserveLottery,proto3" json:"reserve_lottery,omitempty"`
	ShowDescSecond    bool                                                         `protobuf:"varint,14,opt,name=show_desc_second,json=showDescSecond,proto3" json:"show_desc_second,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) Reset() {
	*x = Card_Display_AddOnCardInfo_ReserveAttachCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_ReserveAttachCard) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_ReserveAttachCard.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_ReserveAttachCard) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 0}
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetReserveTotal() int64 {
	if x != nil {
		return x.ReserveTotal
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetDescFirst() *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst {
	if x != nil {
		return x.DescFirst
	}
	return nil
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetDescSecond() string {
	if x != nil {
		return x.DescSecond
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetOidStr() string {
	if x != nil {
		return x.OidStr
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetOriginState() int64 {
	if x != nil {
		return x.OriginState
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetStype() int64 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetLivePlanStartTime() int64 {
	if x != nil {
		return x.LivePlanStartTime
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetReserveLottery() *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery {
	if x != nil {
		return x.ReserveLottery
	}
	return nil
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard) GetShowDescSecond() bool {
	if x != nil {
		return x.ShowDescSecond
	}
	return false
}

type Card_Display_AddOnCardInfo_AttachCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	HeadText   string `protobuf:"bytes,2,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	CoverUrl   string `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	CoverType  int32  `protobuf:"varint,4,opt,name=cover_type,json=coverType,proto3" json:"cover_type,omitempty"`
	Title      string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	DescFirst  string `protobuf:"bytes,6,opt,name=desc_first,json=descFirst,proto3" json:"desc_first,omitempty"`
	DescSecond string `protobuf:"bytes,7,opt,name=desc_second,json=descSecond,proto3" json:"desc_second,omitempty"`
	JumpUrl    string `protobuf:"bytes,8,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	OidStr     string `protobuf:"bytes,9,opt,name=oid_str,json=oidStr,proto3" json:"oid_str,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_AttachCard) Reset() {
	*x = Card_Display_AddOnCardInfo_AttachCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_AttachCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_AttachCard) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_AttachCard) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_AttachCard.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_AttachCard) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 1}
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetHeadText() string {
	if x != nil {
		return x.HeadText
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetCoverType() int32 {
	if x != nil {
		return x.CoverType
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetDescFirst() string {
	if x != nil {
		return x.DescFirst
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetDescSecond() string {
	if x != nil {
		return x.DescSecond
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_AttachCard) GetOidStr() string {
	if x != nil {
		return x.OidStr
	}
	return ""
}

// 可能分为文字投票和图片投票两种，遇到再说
type Card_Display_AddOnCardInfo_TextVoteCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChoiceCnt    int32                                                     `protobuf:"varint,1,opt,name=choice_cnt,json=choiceCnt,proto3" json:"choice_cnt,omitempty"`
	DefaultShare int32                                                     `protobuf:"varint,2,opt,name=default_share,json=defaultShare,proto3" json:"default_share,omitempty"`
	DefaultText  string                                                    `protobuf:"bytes,3,opt,name=default_text,json=defaultText,proto3" json:"default_text,omitempty"`
	Desc         string                                                    `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Endtime      int64                                                     `protobuf:"varint,5,opt,name=endtime,proto3" json:"endtime,omitempty"`
	JoinNum      int64                                                     `protobuf:"varint,6,opt,name=join_num,json=joinNum,proto3" json:"join_num,omitempty"`
	Options      []*Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption `protobuf:"bytes,7,rep,name=options,proto3" json:"options,omitempty"`
	Status       int64                                                     `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Type         int64                                                     `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Uid          int64                                                     `protobuf:"varint,10,opt,name=uid,proto3" json:"uid,omitempty"`
	VoteId       int64                                                     `protobuf:"varint,11,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) Reset() {
	*x = Card_Display_AddOnCardInfo_TextVoteCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_TextVoteCard) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_TextVoteCard.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_TextVoteCard) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 2}
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetChoiceCnt() int32 {
	if x != nil {
		return x.ChoiceCnt
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetDefaultShare() int32 {
	if x != nil {
		return x.DefaultShare
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetDefaultText() string {
	if x != nil {
		return x.DefaultText
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetEndtime() int64 {
	if x != nil {
		return x.Endtime
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetJoinNum() int64 {
	if x != nil {
		return x.JoinNum
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetOptions() []*Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard) GetVoteId() int64 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

type Card_Display_AddOnCardInfo_UgcAttachCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // ugc
	HeadText   string `protobuf:"bytes,2,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ImageUrl   string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	DescSecond string `protobuf:"bytes,5,opt,name=desc_second,json=descSecond,proto3" json:"desc_second,omitempty"`
	PlayUrl    string `protobuf:"bytes,6,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty"`
	Duration   string `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	MultiLine  bool   `protobuf:"varint,8,opt,name=multi_line,json=multiLine,proto3" json:"multi_line,omitempty"`
	OidStr     string `protobuf:"bytes,9,opt,name=oid_str,json=oidStr,proto3" json:"oid_str,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) Reset() {
	*x = Card_Display_AddOnCardInfo_UgcAttachCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_UgcAttachCard) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_UgcAttachCard.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_UgcAttachCard) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 3}
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetHeadText() string {
	if x != nil {
		return x.HeadText
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetDescSecond() string {
	if x != nil {
		return x.DescSecond
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetMultiLine() bool {
	if x != nil {
		return x.MultiLine
	}
	return false
}

func (x *Card_Display_AddOnCardInfo_UgcAttachCard) GetOidStr() string {
	if x != nil {
		return x.OidStr
	}
	return ""
}

type Card_Display_AddOnCardInfo_GoodsCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Card_Display_AddOnCardInfo_GoodsCard_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_GoodsCard) Reset() {
	*x = Card_Display_AddOnCardInfo_GoodsCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_GoodsCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_GoodsCard) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_GoodsCard) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_GoodsCard.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_GoodsCard) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 4}
}

func (x *Card_Display_AddOnCardInfo_GoodsCard) GetList() []*Card_Display_AddOnCardInfo_GoodsCard_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Style int64  `protobuf:"varint,2,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) Reset() {
	*x = Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 0, 0}
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst) GetStyle() int64 {
	if x != nil {
		return x.Style
	}
	return 0
}

// 预约抽奖
type Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 抽奖的那个礼物图标
	Icon        string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Text        string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	JumpUrl     string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	LotteryType int64  `protobuf:"varint,4,opt,name=lottery_type,json=lotteryType,proto3" json:"lottery_type,omitempty"`
	ShareIcon   string `protobuf:"bytes,5,opt,name=share_icon,json=shareIcon,proto3" json:"share_icon,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) Reset() {
	*x = Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 0, 1}
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) GetLotteryType() int64 {
	if x != nil {
		return x.LotteryType
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery) GetShareIcon() string {
	if x != nil {
		return x.ShareIcon
	}
	return ""
}

type Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BtnStr string `protobuf:"bytes,1,opt,name=btn_str,json=btnStr,proto3" json:"btn_str,omitempty"`
	Cnt    int32  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Idx    int32  `protobuf:"varint,4,opt,name=idx,proto3" json:"idx,omitempty"`
	Title  string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	ImgUrl string `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) Reset() {
	*x = Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 2, 0}
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) GetBtnStr() string {
	if x != nil {
		return x.BtnStr
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

type Card_Display_AddOnCardInfo_GoodsCard_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UP主的推荐
	AdMark  string `protobuf:"bytes,1,opt,name=adMark,proto3" json:"adMark,omitempty"`
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`
	Brief   string `protobuf:"bytes,3,opt,name=brief,proto3" json:"brief,omitempty"`
	// descTags = 4; 目前格式未知
	DynamicId         int64   `protobuf:"varint,5,opt,name=dynamicId,proto3" json:"dynamicId,omitempty"`
	IconName          string  `protobuf:"bytes,6,opt,name=iconName,proto3" json:"iconName,omitempty"`
	IconUrl           string  `protobuf:"bytes,7,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	Id                int64   `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
	Img               string  `protobuf:"bytes,9,opt,name=img,proto3" json:"img,omitempty"` // 这个是头图
	ItemIdStr         string  `protobuf:"bytes,10,opt,name=itemIdStr,proto3" json:"itemIdStr,omitempty"`
	ItemsId           int64   `protobuf:"varint,11,opt,name=itemsId,proto3" json:"itemsId,omitempty"`
	JumpLink          string  `protobuf:"bytes,12,opt,name=jumpLink,proto3" json:"jumpLink,omitempty"`
	JumpLinkDesc      string  `protobuf:"bytes,13,opt,name=jumpLinkDesc,proto3" json:"jumpLinkDesc,omitempty"`
	Msource           string  `protobuf:"bytes,14,opt,name=msource,proto3" json:"msource,omitempty"`
	Name              string  `protobuf:"bytes,15,opt,name=name,proto3" json:"name,omitempty"`
	OriPrice          string  `protobuf:"bytes,16,opt,name=oriPrice,proto3" json:"oriPrice,omitempty"`
	OuterId           int64   `protobuf:"varint,17,opt,name=outerId,proto3" json:"outerId,omitempty"`
	Price             float32 `protobuf:"fixed32,18,opt,name=price,proto3" json:"price,omitempty"`
	PriceStr          string  `protobuf:"bytes,19,opt,name=priceStr,proto3" json:"priceStr,omitempty"`
	SchemaPackageName string  `protobuf:"bytes,20,opt,name=schemaPackageName,proto3" json:"schemaPackageName,omitempty"`
	SchemaUrl         string  `protobuf:"bytes,21,opt,name=schemaUrl,proto3" json:"schemaUrl,omitempty"`
	ShopGoodType      int32   `protobuf:"varint,22,opt,name=shopGoodType,proto3" json:"shopGoodType,omitempty"`
	SourceType        int32   `protobuf:"varint,23,opt,name=sourceType,proto3" json:"sourceType,omitempty"`
	Type              int32   `protobuf:"varint,24,opt,name=type,proto3" json:"type,omitempty"`
	UseAdWebV2        bool    `protobuf:"varint,25,opt,name=useAdWebV2,proto3" json:"useAdWebV2,omitempty"`
	WordJumpLinkDesc  string  `protobuf:"bytes,26,opt,name=wordJumpLinkDesc,proto3" json:"wordJumpLinkDesc,omitempty"`
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) Reset() {
	*x = Card_Display_AddOnCardInfo_GoodsCard_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Display_AddOnCardInfo_GoodsCard_ListItem) ProtoMessage() {}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Display_AddOnCardInfo_GoodsCard_ListItem.ProtoReflect.Descriptor instead.
func (*Card_Display_AddOnCardInfo_GoodsCard_ListItem) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{7, 2, 2, 4, 0}
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetAdMark() string {
	if x != nil {
		return x.AdMark
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetIconName() string {
	if x != nil {
		return x.IconName
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetItemIdStr() string {
	if x != nil {
		return x.ItemIdStr
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetItemsId() int64 {
	if x != nil {
		return x.ItemsId
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetJumpLinkDesc() string {
	if x != nil {
		return x.JumpLinkDesc
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetMsource() string {
	if x != nil {
		return x.Msource
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetOriPrice() string {
	if x != nil {
		return x.OriPrice
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetOuterId() int64 {
	if x != nil {
		return x.OuterId
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetPriceStr() string {
	if x != nil {
		return x.PriceStr
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetSchemaPackageName() string {
	if x != nil {
		return x.SchemaPackageName
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetShopGoodType() int32 {
	if x != nil {
		return x.ShopGoodType
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetUseAdWebV2() bool {
	if x != nil {
		return x.UseAdWebV2
	}
	return false
}

func (x *Card_Display_AddOnCardInfo_GoodsCard_ListItem) GetWordJumpLinkDesc() string {
	if x != nil {
		return x.WordJumpLinkDesc
	}
	return ""
}

type DynamicSvrSpaceHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards      []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	HasMore    int32   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	NextOffset int64   `protobuf:"varint,3,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
}

func (x *DynamicSvrSpaceHistoryResponse_Data) Reset() {
	*x = DynamicSvrSpaceHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSvrSpaceHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSvrSpaceHistoryResponse_Data) ProtoMessage() {}

func (x *DynamicSvrSpaceHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSvrSpaceHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*DynamicSvrSpaceHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{8, 0}
}

func (x *DynamicSvrSpaceHistoryResponse_Data) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *DynamicSvrSpaceHistoryResponse_Data) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *DynamicSvrSpaceHistoryResponse_Data) GetNextOffset() int64 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

type DynamicSvrDynamicNewResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewNum        int32   `protobuf:"varint,1,opt,name=new_num,json=newNum,proto3" json:"new_num,omitempty"`
	ExistGap      int32   `protobuf:"varint,2,opt,name=exist_gap,json=existGap,proto3" json:"exist_gap,omitempty"`
	UpdateNum     int32   `protobuf:"varint,3,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
	OpenRcmd      int32   `protobuf:"varint,4,opt,name=open_rcmd,json=openRcmd,proto3" json:"open_rcmd,omitempty"`
	Cards         []*Card `protobuf:"bytes,5,rep,name=cards,proto3" json:"cards,omitempty"`
	MaxDynamicId  int64   `protobuf:"varint,6,opt,name=max_dynamic_id,json=maxDynamicId,proto3" json:"max_dynamic_id,omitempty"`
	HistoryOffset int64   `protobuf:"varint,7,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
}

func (x *DynamicSvrDynamicNewResponse_Data) Reset() {
	*x = DynamicSvrDynamicNewResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSvrDynamicNewResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSvrDynamicNewResponse_Data) ProtoMessage() {}

func (x *DynamicSvrDynamicNewResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSvrDynamicNewResponse_Data.ProtoReflect.Descriptor instead.
func (*DynamicSvrDynamicNewResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{9, 0}
}

func (x *DynamicSvrDynamicNewResponse_Data) GetNewNum() int32 {
	if x != nil {
		return x.NewNum
	}
	return 0
}

func (x *DynamicSvrDynamicNewResponse_Data) GetExistGap() int32 {
	if x != nil {
		return x.ExistGap
	}
	return 0
}

func (x *DynamicSvrDynamicNewResponse_Data) GetUpdateNum() int32 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

func (x *DynamicSvrDynamicNewResponse_Data) GetOpenRcmd() int32 {
	if x != nil {
		return x.OpenRcmd
	}
	return 0
}

func (x *DynamicSvrDynamicNewResponse_Data) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *DynamicSvrDynamicNewResponse_Data) GetMaxDynamicId() int64 {
	if x != nil {
		return x.MaxDynamicId
	}
	return 0
}

func (x *DynamicSvrDynamicNewResponse_Data) GetHistoryOffset() int64 {
	if x != nil {
		return x.HistoryOffset
	}
	return 0
}

type DynamicSvrDynamicHistoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards      []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	HasMore    int32   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	NextOffset int64   `protobuf:"varint,3,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
}

func (x *DynamicSvrDynamicHistoryResponse_Data) Reset() {
	*x = DynamicSvrDynamicHistoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSvrDynamicHistoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSvrDynamicHistoryResponse_Data) ProtoMessage() {}

func (x *DynamicSvrDynamicHistoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSvrDynamicHistoryResponse_Data.ProtoReflect.Descriptor instead.
func (*DynamicSvrDynamicHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{10, 0}
}

func (x *DynamicSvrDynamicHistoryResponse_Data) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *DynamicSvrDynamicHistoryResponse_Data) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *DynamicSvrDynamicHistoryResponse_Data) GetNextOffset() int64 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

type GetAttentionListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []int64 `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
}

func (x *GetAttentionListResponse_Data) Reset() {
	*x = GetAttentionListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttentionListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttentionListResponse_Data) ProtoMessage() {}

func (x *GetAttentionListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttentionListResponse_Data.ProtoReflect.Descriptor instead.
func (*GetAttentionListResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetAttentionListResponse_Data) GetList() []int64 {
	if x != nil {
		return x.List
	}
	return nil
}

type WebInterfaceNavResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLogin   bool                                    `protobuf:"varint,1,opt,name=isLogin,proto3" json:"isLogin,omitempty"`
	Mid       int64                                   `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Uname     string                                  `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname,omitempty"`
	LevelInfo *WebInterfaceNavResponse_Data_LevelInfo `protobuf:"bytes,4,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	VipLabel  *WebInterfaceNavResponse_Data_VipLabel  `protobuf:"bytes,5,opt,name=vip_label,json=vipLabel,proto3" json:"vip_label,omitempty"`
	WbiImg    *WebInterfaceNavResponse_Data_WbiImg    `protobuf:"bytes,6,opt,name=wbi_img,json=wbiImg,proto3" json:"wbi_img,omitempty"`
}

func (x *WebInterfaceNavResponse_Data) Reset() {
	*x = WebInterfaceNavResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebInterfaceNavResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebInterfaceNavResponse_Data) ProtoMessage() {}

func (x *WebInterfaceNavResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebInterfaceNavResponse_Data.ProtoReflect.Descriptor instead.
func (*WebInterfaceNavResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{13, 0}
}

func (x *WebInterfaceNavResponse_Data) GetIsLogin() bool {
	if x != nil {
		return x.IsLogin
	}
	return false
}

func (x *WebInterfaceNavResponse_Data) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *WebInterfaceNavResponse_Data) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *WebInterfaceNavResponse_Data) GetLevelInfo() *WebInterfaceNavResponse_Data_LevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *WebInterfaceNavResponse_Data) GetVipLabel() *WebInterfaceNavResponse_Data_VipLabel {
	if x != nil {
		return x.VipLabel
	}
	return nil
}

func (x *WebInterfaceNavResponse_Data) GetWbiImg() *WebInterfaceNavResponse_Data_WbiImg {
	if x != nil {
		return x.WbiImg
	}
	return nil
}

type WebInterfaceNavResponse_Data_LevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentLevel int32 `protobuf:"varint,1,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"`
}

func (x *WebInterfaceNavResponse_Data_LevelInfo) Reset() {
	*x = WebInterfaceNavResponse_Data_LevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebInterfaceNavResponse_Data_LevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebInterfaceNavResponse_Data_LevelInfo) ProtoMessage() {}

func (x *WebInterfaceNavResponse_Data_LevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebInterfaceNavResponse_Data_LevelInfo.ProtoReflect.Descriptor instead.
func (*WebInterfaceNavResponse_Data_LevelInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *WebInterfaceNavResponse_Data_LevelInfo) GetCurrentLevel() int32 {
	if x != nil {
		return x.CurrentLevel
	}
	return 0
}

type WebInterfaceNavResponse_Data_VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *WebInterfaceNavResponse_Data_VipLabel) Reset() {
	*x = WebInterfaceNavResponse_Data_VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebInterfaceNavResponse_Data_VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebInterfaceNavResponse_Data_VipLabel) ProtoMessage() {}

func (x *WebInterfaceNavResponse_Data_VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebInterfaceNavResponse_Data_VipLabel.ProtoReflect.Descriptor instead.
func (*WebInterfaceNavResponse_Data_VipLabel) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{13, 0, 1}
}

func (x *WebInterfaceNavResponse_Data_VipLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type WebInterfaceNavResponse_Data_WbiImg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImgUrl string `protobuf:"bytes,1,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	SubUrl string `protobuf:"bytes,2,opt,name=sub_url,json=subUrl,proto3" json:"sub_url,omitempty"`
}

func (x *WebInterfaceNavResponse_Data_WbiImg) Reset() {
	*x = WebInterfaceNavResponse_Data_WbiImg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebInterfaceNavResponse_Data_WbiImg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebInterfaceNavResponse_Data_WbiImg) ProtoMessage() {}

func (x *WebInterfaceNavResponse_Data_WbiImg) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebInterfaceNavResponse_Data_WbiImg.ProtoReflect.Descriptor instead.
func (*WebInterfaceNavResponse_Data_WbiImg) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{13, 0, 2}
}

func (x *WebInterfaceNavResponse_Data_WbiImg) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *WebInterfaceNavResponse_Data_WbiImg) GetSubUrl() string {
	if x != nil {
		return x.SubUrl
	}
	return ""
}

type CardWithImage_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                        `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Pictures      []*CardWithImage_Item_Picture `protobuf:"bytes,5,rep,name=pictures,proto3" json:"pictures,omitempty"`
	PicturesCount int32                         `protobuf:"varint,6,opt,name=pictures_count,json=picturesCount,proto3" json:"pictures_count,omitempty"`
	UploadTime    int64                         `protobuf:"varint,7,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`
}

func (x *CardWithImage_Item) Reset() {
	*x = CardWithImage_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithImage_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithImage_Item) ProtoMessage() {}

func (x *CardWithImage_Item) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithImage_Item.ProtoReflect.Descriptor instead.
func (*CardWithImage_Item) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CardWithImage_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardWithImage_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithImage_Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CardWithImage_Item) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CardWithImage_Item) GetPictures() []*CardWithImage_Item_Picture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *CardWithImage_Item) GetPicturesCount() int32 {
	if x != nil {
		return x.PicturesCount
	}
	return 0
}

func (x *CardWithImage_Item) GetUploadTime() int64 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

type CardWithImage_Item_Picture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImgSrc    string  `protobuf:"bytes,1,opt,name=img_src,json=imgSrc,proto3" json:"img_src,omitempty"`
	ImgWidth  int32   `protobuf:"varint,2,opt,name=img_width,json=imgWidth,proto3" json:"img_width,omitempty"`
	ImgHeight int32   `protobuf:"varint,3,opt,name=img_height,json=imgHeight,proto3" json:"img_height,omitempty"`
	ImgSize   float32 `protobuf:"fixed32,4,opt,name=img_size,json=imgSize,proto3" json:"img_size,omitempty"`
}

func (x *CardWithImage_Item_Picture) Reset() {
	*x = CardWithImage_Item_Picture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithImage_Item_Picture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithImage_Item_Picture) ProtoMessage() {}

func (x *CardWithImage_Item_Picture) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithImage_Item_Picture.ProtoReflect.Descriptor instead.
func (*CardWithImage_Item_Picture) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *CardWithImage_Item_Picture) GetImgSrc() string {
	if x != nil {
		return x.ImgSrc
	}
	return ""
}

func (x *CardWithImage_Item_Picture) GetImgWidth() int32 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *CardWithImage_Item_Picture) GetImgHeight() int32 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

func (x *CardWithImage_Item_Picture) GetImgSize() float32 {
	if x != nil {
		return x.ImgSize
	}
	return 0
}

type CardWithOrig_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string          `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp int64           `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OrigType  DynamicDescType `protobuf:"varint,3,opt,name=orig_type,json=origType,proto3,enum=bilibili.DynamicDescType" json:"orig_type,omitempty"`
	Reply     int64           `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	Miss      int64           `protobuf:"varint,5,opt,name=miss,proto3" json:"miss,omitempty"`
	Tips      string          `protobuf:"bytes,6,opt,name=tips,proto3" json:"tips,omitempty"`
}

func (x *CardWithOrig_Item) Reset() {
	*x = CardWithOrig_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithOrig_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithOrig_Item) ProtoMessage() {}

func (x *CardWithOrig_Item) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithOrig_Item.ProtoReflect.Descriptor instead.
func (*CardWithOrig_Item) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CardWithOrig_Item) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CardWithOrig_Item) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CardWithOrig_Item) GetOrigType() DynamicDescType {
	if x != nil {
		return x.OrigType
	}
	return DynamicDescType_DynamicDescTypeUnknown
}

func (x *CardWithOrig_Item) GetReply() int64 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *CardWithOrig_Item) GetMiss() int64 {
	if x != nil {
		return x.Miss
	}
	return 0
}

func (x *CardWithOrig_Item) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

type CardWithOrig_OriginUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CardWithOrig_OriginUser_Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CardWithOrig_OriginUser) Reset() {
	*x = CardWithOrig_OriginUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithOrig_OriginUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithOrig_OriginUser) ProtoMessage() {}

func (x *CardWithOrig_OriginUser) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithOrig_OriginUser.ProtoReflect.Descriptor instead.
func (*CardWithOrig_OriginUser) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{15, 1}
}

func (x *CardWithOrig_OriginUser) GetInfo() *CardWithOrig_OriginUser_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type CardWithOrig_OriginUser_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
}

func (x *CardWithOrig_OriginUser_Info) Reset() {
	*x = CardWithOrig_OriginUser_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithOrig_OriginUser_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithOrig_OriginUser_Info) ProtoMessage() {}

func (x *CardWithOrig_OriginUser_Info) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithOrig_OriginUser_Info.ProtoReflect.Descriptor instead.
func (*CardWithOrig_OriginUser_Info) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{15, 1, 0}
}

func (x *CardWithOrig_OriginUser_Info) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CardWithOrig_OriginUser_Info) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

type CardWithVideo_Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type         DynamicDescType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.DynamicDescType" json:"type,omitempty"`
	DynamicIdStr string          `protobuf:"bytes,5,opt,name=dynamic_id_str,json=dynamicIdStr,proto3" json:"dynamic_id_str,omitempty"`
	Bvid         string          `protobuf:"bytes,9,opt,name=bvid,proto3" json:"bvid,omitempty"`
}

func (x *CardWithVideo_Origin) Reset() {
	*x = CardWithVideo_Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithVideo_Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithVideo_Origin) ProtoMessage() {}

func (x *CardWithVideo_Origin) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithVideo_Origin.ProtoReflect.Descriptor instead.
func (*CardWithVideo_Origin) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{16, 0}
}

func (x *CardWithVideo_Origin) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CardWithVideo_Origin) GetType() DynamicDescType {
	if x != nil {
		return x.Type
	}
	return DynamicDescType_DynamicDescTypeUnknown
}

func (x *CardWithVideo_Origin) GetDynamicIdStr() string {
	if x != nil {
		return x.DynamicIdStr
	}
	return ""
}

func (x *CardWithVideo_Origin) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

type CardTextOnly_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpId      int64  `protobuf:"varint,1,opt,name=rp_id,json=rpId,proto3" json:"rp_id,omitempty"`
	Uid       int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Ctrl      string `protobuf:"bytes,4,opt,name=ctrl,proto3" json:"ctrl,omitempty"`
	Timestamp int64  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reply     int32  `protobuf:"varint,8,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *CardTextOnly_Item) Reset() {
	*x = CardTextOnly_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTextOnly_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTextOnly_Item) ProtoMessage() {}

func (x *CardTextOnly_Item) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTextOnly_Item.ProtoReflect.Descriptor instead.
func (*CardTextOnly_Item) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{17, 0}
}

func (x *CardTextOnly_Item) GetRpId() int64 {
	if x != nil {
		return x.RpId
	}
	return 0
}

func (x *CardTextOnly_Item) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CardTextOnly_Item) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CardTextOnly_Item) GetCtrl() string {
	if x != nil {
		return x.Ctrl
	}
	return ""
}

func (x *CardTextOnly_Item) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CardTextOnly_Item) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

type CardWithMusic_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtControl string `protobuf:"bytes,1,opt,name=at_control,json=atControl,proto3" json:"at_control,omitempty"`
}

func (x *CardWithMusic_Item) Reset() {
	*x = CardWithMusic_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithMusic_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithMusic_Item) ProtoMessage() {}

func (x *CardWithMusic_Item) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithMusic_Item.ProtoReflect.Descriptor instead.
func (*CardWithMusic_Item) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{19, 0}
}

func (x *CardWithMusic_Item) GetAtControl() string {
	if x != nil {
		return x.AtControl
	}
	return ""
}

type CardWithMedia_ApiSeasonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgmType    int64  `protobuf:"varint,1,opt,name=bgm_type,json=bgmType,proto3" json:"bgm_type,omitempty"`
	Cover      string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	IsFinish   int64  `protobuf:"varint,3,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	SeasonId   int64  `protobuf:"varint,4,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title      string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	TotalCount int64  `protobuf:"varint,6,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Ts         int64  `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
	TypeName   string `protobuf:"bytes,8,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
}

func (x *CardWithMedia_ApiSeasonInfo) Reset() {
	*x = CardWithMedia_ApiSeasonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithMedia_ApiSeasonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithMedia_ApiSeasonInfo) ProtoMessage() {}

func (x *CardWithMedia_ApiSeasonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithMedia_ApiSeasonInfo.ProtoReflect.Descriptor instead.
func (*CardWithMedia_ApiSeasonInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{20, 0}
}

func (x *CardWithMedia_ApiSeasonInfo) GetBgmType() int64 {
	if x != nil {
		return x.BgmType
	}
	return 0
}

func (x *CardWithMedia_ApiSeasonInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithMedia_ApiSeasonInfo) GetIsFinish() int64 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

func (x *CardWithMedia_ApiSeasonInfo) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *CardWithMedia_ApiSeasonInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithMedia_ApiSeasonInfo) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *CardWithMedia_ApiSeasonInfo) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *CardWithMedia_ApiSeasonInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type CardWithSketch_Vest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CardWithSketch_Vest) Reset() {
	*x = CardWithSketch_Vest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithSketch_Vest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithSketch_Vest) ProtoMessage() {}

func (x *CardWithSketch_Vest) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithSketch_Vest.ProtoReflect.Descriptor instead.
func (*CardWithSketch_Vest) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{21, 0}
}

func (x *CardWithSketch_Vest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CardWithSketch_Vest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CardWithSketch_Sketch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string                       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	DescText  string                       `protobuf:"bytes,2,opt,name=desc_text,json=descText,proto3" json:"desc_text,omitempty"`
	BizType   int32                        `protobuf:"varint,3,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	SketchId  int64                        `protobuf:"varint,4,opt,name=sketch_id,json=sketchId,proto3" json:"sketch_id,omitempty"`
	CoverUrl  string                       `protobuf:"bytes,5,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	Tags      []*CardWithSketch_Sketch_Tag `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	TargetUrl string                       `protobuf:"bytes,7,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
}

func (x *CardWithSketch_Sketch) Reset() {
	*x = CardWithSketch_Sketch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithSketch_Sketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithSketch_Sketch) ProtoMessage() {}

func (x *CardWithSketch_Sketch) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithSketch_Sketch.ProtoReflect.Descriptor instead.
func (*CardWithSketch_Sketch) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{21, 1}
}

func (x *CardWithSketch_Sketch) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithSketch_Sketch) GetDescText() string {
	if x != nil {
		return x.DescText
	}
	return ""
}

func (x *CardWithSketch_Sketch) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *CardWithSketch_Sketch) GetSketchId() int64 {
	if x != nil {
		return x.SketchId
	}
	return 0
}

func (x *CardWithSketch_Sketch) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CardWithSketch_Sketch) GetTags() []*CardWithSketch_Sketch_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CardWithSketch_Sketch) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

type CardWithSketch_Sketch_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type  int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CardWithSketch_Sketch_Tag) Reset() {
	*x = CardWithSketch_Sketch_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithSketch_Sketch_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithSketch_Sketch_Tag) ProtoMessage() {}

func (x *CardWithSketch_Sketch_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithSketch_Sketch_Tag.ProtoReflect.Descriptor instead.
func (*CardWithSketch_Sketch_Tag) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{21, 1, 0}
}

func (x *CardWithSketch_Sketch_Tag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CardWithSketch_Sketch_Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardWithSketch_Sketch_Tag) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type CardWithMylist_Upper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Face     string `protobuf:"bytes,1,opt,name=face,proto3" json:"face,omitempty"`
	Followed int32  `protobuf:"varint,2,opt,name=followed,proto3" json:"followed,omitempty"`
	Mid      int64  `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CardWithMylist_Upper) Reset() {
	*x = CardWithMylist_Upper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithMylist_Upper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithMylist_Upper) ProtoMessage() {}

func (x *CardWithMylist_Upper) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithMylist_Upper.ProtoReflect.Descriptor instead.
func (*CardWithMylist_Upper) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{23, 0}
}

func (x *CardWithMylist_Upper) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *CardWithMylist_Upper) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

func (x *CardWithMylist_Upper) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CardWithMylist_Upper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CardWithLiveV2_LivePlayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover          string     `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	Title          string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	RoomId         int64      `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	LiveStatus     LiveStatus `protobuf:"varint,4,opt,name=live_status,json=liveStatus,proto3,enum=bilibili.LiveStatus" json:"live_status,omitempty"`
	Link           string     `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	Uid            int64      `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	LiveId         int64      `protobuf:"varint,7,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`
	AreaId         int64      `protobuf:"varint,8,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	AreaName       string     `protobuf:"bytes,9,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
	ParentAreaId   int64      `protobuf:"varint,10,opt,name=parent_area_id,json=parentAreaId,proto3" json:"parent_area_id,omitempty"`
	ParentAreaName string     `protobuf:"bytes,11,opt,name=parent_area_name,json=parentAreaName,proto3" json:"parent_area_name,omitempty"`
	RoomType       int64      `protobuf:"varint,12,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"`
}

func (x *CardWithLiveV2_LivePlayInfo) Reset() {
	*x = CardWithLiveV2_LivePlayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithLiveV2_LivePlayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithLiveV2_LivePlayInfo) ProtoMessage() {}

func (x *CardWithLiveV2_LivePlayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithLiveV2_LivePlayInfo.ProtoReflect.Descriptor instead.
func (*CardWithLiveV2_LivePlayInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{24, 0}
}

func (x *CardWithLiveV2_LivePlayInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardWithLiveV2_LivePlayInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardWithLiveV2_LivePlayInfo) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *CardWithLiveV2_LivePlayInfo) GetLiveStatus() LiveStatus {
	if x != nil {
		return x.LiveStatus
	}
	return LiveStatus_NoLiving
}

func (x *CardWithLiveV2_LivePlayInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *CardWithLiveV2_LivePlayInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CardWithLiveV2_LivePlayInfo) GetLiveId() int64 {
	if x != nil {
		return x.LiveId
	}
	return 0
}

func (x *CardWithLiveV2_LivePlayInfo) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *CardWithLiveV2_LivePlayInfo) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *CardWithLiveV2_LivePlayInfo) GetParentAreaId() int64 {
	if x != nil {
		return x.ParentAreaId
	}
	return 0
}

func (x *CardWithLiveV2_LivePlayInfo) GetParentAreaName() string {
	if x != nil {
		return x.ParentAreaName
	}
	return ""
}

func (x *CardWithLiveV2_LivePlayInfo) GetRoomType() int64 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

type CardWithCourse_Badge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CardWithCourse_Badge) Reset() {
	*x = CardWithCourse_Badge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithCourse_Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithCourse_Badge) ProtoMessage() {}

func (x *CardWithCourse_Badge) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithCourse_Badge.ProtoReflect.Descriptor instead.
func (*CardWithCourse_Badge) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{25, 0}
}

func (x *CardWithCourse_Badge) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CardWithCourse_UpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CardWithCourse_UpInfo) Reset() {
	*x = CardWithCourse_UpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsp_bilibili_bilibili_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithCourse_UpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithCourse_UpInfo) ProtoMessage() {}

func (x *CardWithCourse_UpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_bilibili_bilibili_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithCourse_UpInfo.ProtoReflect.Descriptor instead.
func (*CardWithCourse_UpInfo) Descriptor() ([]byte, []int) {
	return file_lsp_bilibili_bilibili_proto_rawDescGZIP(), []int{25, 1}
}

func (x *CardWithCourse_UpInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CardWithCourse_UpInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_lsp_bilibili_bilibili_proto protoreflect.FileDescriptor

var file_lsp_bilibili_bilibili_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x73, 0x70, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x22, 0x98, 0x04, 0x0a, 0x15, 0x58, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x58, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x96, 0x03, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x4a,
	0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x58, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a,
	0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x90, 0x04, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x98, 0x03, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x87, 0x02, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x6b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2c, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x88, 0x02, 0x0a, 0x0c, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x75, 0x62, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd4, 0x05, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xd2, 0x04, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x48, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x73, 0x73, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x84, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x1a, 0xdb,
	0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a,
	0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x07,
	0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x1a, 0x69, 0x0a, 0x06, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x22, 0xd3, 0x01, 0x0a,
	0x15, 0x58, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x58, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x52,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x22, 0xfc, 0x27, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12,
	0x27, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x1a, 0xbd, 0x05, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x44, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09,
	0x6f, 0x72, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x5f, 0x64, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x65, 0x44, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x53, 0x74,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x5f, 0x64,
	0x79, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x65, 0x44, 0x79, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0e, 0x6f, 0x72,
	0x69, 0x67, 0x5f, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x44, 0x79, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x69, 0x64, 0x53, 0x74, 0x72, 0x1a, 0x8b, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x1a, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x29, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f,
	0x70, 0x1a, 0xed, 0x20, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x3f, 0x0a,
	0x0a, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c,
	0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x4d, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x74, 0x1a, 0x85, 0x03, 0x0a, 0x09, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x0d, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xa4, 0x02, 0x0a, 0x0b, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x45, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x1a, 0xa8, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x47, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09,
	0x6c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x30, 0x0a, 0x08, 0x4c, 0x69, 0x6b,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xcd, 0x17, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a,
	0x15, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x61, 0x64, 0x64, 0x4f, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x13,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x50, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x5a, 0x0a, 0x0f, 0x75, 0x67, 0x63, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x67, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x0d, 0x75, 0x67, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x72, 0x64, 0x1a, 0xe3,
	0x05, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x5f, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52,
	0x09, 0x64, 0x65, 0x73, 0x63, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x69,
	0x64, 0x53, 0x74, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x1a, 0x35, 0x0a, 0x09, 0x44, 0x65, 0x73, 0x63, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x95, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x49, 0x63, 0x6f, 0x6e, 0x1a, 0x83, 0x02, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x69, 0x64, 0x53, 0x74, 0x72, 0x1a, 0x84, 0x04, 0x0a, 0x0c, 0x54,
	0x65, 0x78, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x5a, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x1a, 0x90,
	0x01, 0x0a, 0x0e, 0x54, 0x65, 0x78, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x74, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x74, 0x6e, 0x53, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69,
	0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x1a, 0x83, 0x02, 0x0a, 0x0d, 0x55, 0x67, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x69, 0x64, 0x53, 0x74, 0x72, 0x1a, 0xa1, 0x06, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43,
	0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x1a, 0xc6, 0x05, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x6d, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x53, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73,
	0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x47,
	0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x41, 0x64, 0x57, 0x65, 0x62, 0x56, 0x32, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x41, 0x64, 0x57, 0x65, 0x62, 0x56, 0x32, 0x12,
	0x2a, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x64, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x64, 0x4a,
	0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x1a, 0xb3, 0x02, 0x0a, 0x06,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x69, 0x6b,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x4d, 0x0a, 0x10,
	0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x64,
	0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x75,
	0x73, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78,
	0x74, 0x22, 0xfb, 0x01, 0x0a, 0x1e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x76, 0x72,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x53, 0x76, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x68, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0xfb, 0x02, 0x0a, 0x1c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x76, 0x72, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53,
	0x76, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0xeb, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x73, 0x74, 0x5f, 0x67, 0x61, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x73, 0x74, 0x47, 0x61, 0x70, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xff, 0x01,
	0x0a, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x76, 0x72, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x53, 0x76, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x68, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x58, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd5, 0x04,
	0x0a, 0x17, 0x57, 0x65, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x57, 0x65, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xbd, 0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x4f, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x57, 0x65, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4c, 0x0a, 0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x57, 0x65, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x46, 0x0a, 0x07, 0x77, 0x62, 0x69, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x57, 0x65, 0x62, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x57, 0x62, 0x69, 0x49, 0x6d, 0x67, 0x52,
	0x06, 0x77, 0x62, 0x69, 0x49, 0x6d, 0x67, 0x1a, 0x30, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x1e, 0x0a, 0x08, 0x56, 0x69, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x3a, 0x0a, 0x06, 0x57, 0x62, 0x69,
	0x49, 0x6d, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x75, 0x62, 0x55, 0x72, 0x6c, 0x22, 0xb3, 0x03, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x1a, 0xef, 0x02, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x1a, 0x79, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6d, 0x67, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d,
	0x67, 0x53, 0x72, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x67, 0x5f, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xcc, 0x03, 0x0a, 0x0c,
	0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x72,
	0x69, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x72,
	0x69, 0x67, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0xb4, 0x01, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x6f, 0x72,
	0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x69, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73,
	0x1a, 0x78, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3a,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x4f, 0x72, 0x69, 0x67, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x2e, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x03, 0x0a, 0x0d, 0x43,
	0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x75, 0x62, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x1a, 0x83,
	0x01, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x53, 0x74, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x76, 0x69, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x1a, 0x8f, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x13, 0x0a, 0x05, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x72, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x74, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x72,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9e, 0x03, 0x0a, 0x0d, 0x43,
	0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x43, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x1a, 0x25, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0xb9, 0x04, 0x0a, 0x0d,
	0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x4b, 0x0a,
	0x0d, 0x61, 0x70, 0x69, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x41, 0x70,
	0x69, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x69,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xde, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x67, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe0, 0x03, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x04, 0x76, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6b, 0x65, 0x74,
	0x63, 0x68, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x52, 0x04, 0x76, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x06, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x52, 0x06,
	0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x1a, 0x32, 0x0a, 0x04, 0x56, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0xad, 0x02, 0x0a, 0x06, 0x53,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x37, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x54, 0x61, 0x67,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0x43, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x0c, 0x43,
	0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x76, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x72, 0x65, 0x61, 0x56, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x38, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8b, 0x03, 0x0a, 0x0e, 0x43,
	0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x1a, 0x5d, 0x0a, 0x05, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf6, 0x03, 0x0a, 0x0e, 0x43, 0x61, 0x72,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x56, 0x32, 0x12, 0x4b, 0x0a, 0x0e, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x56, 0x32, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x69, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x1a, 0xec, 0x02, 0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x8c, 0x03, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x1b, 0x0a,
	0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x34, 0x0a, 0x06, 0x55, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x2a, 0x26, 0x0a, 0x0a, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x6f, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x2a, 0x1e, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x66, 0x66, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6e, 0x10, 0x01, 0x2a, 0x25, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x6e, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x01, 0x2a,
	0x34, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x61,
	0x79, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x46, 0x65, 0x73, 0x74, 0x69,
	0x76, 0x61, 0x6c, 0x10, 0x02, 0x2a, 0xaf, 0x02, 0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10,
	0x08, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x10, 0x40, 0x12,
	0x0e, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x10, 0x80, 0x02, 0x12,
	0x0e, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x10, 0x80, 0x04, 0x12,
	0x0d, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x69, 0x73, 0x73, 0x10, 0x80, 0x08, 0x12, 0x0f,
	0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x10, 0x80, 0x10, 0x12,
	0x0e, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x10, 0x82, 0x20, 0x12,
	0x0e, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x10, 0x83, 0x20, 0x12,
	0x14, 0x0a, 0x0f, 0x57, 0x69, 0x74, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x72, 0x79, 0x10, 0x85, 0x20, 0x12, 0x0d, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76,
	0x65, 0x10, 0xe8, 0x20, 0x12, 0x0f, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x10, 0xcc, 0x21, 0x12, 0x0f, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x10, 0xce, 0x21, 0x12, 0x0f, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69,
	0x76, 0x65, 0x56, 0x32, 0x10, 0xd4, 0x21, 0x2a, 0x76, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4f, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x06, 0x42,
	0x0e, 0x5a, 0x0c, 0x6c, 0x73, 0x70, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lsp_bilibili_bilibili_proto_rawDescOnce sync.Once
	file_lsp_bilibili_bilibili_proto_rawDescData = file_lsp_bilibili_bilibili_proto_rawDesc
)

func file_lsp_bilibili_bilibili_proto_rawDescGZIP() []byte {
	file_lsp_bilibili_bilibili_proto_rawDescOnce.Do(func() {
		file_lsp_bilibili_bilibili_proto_rawDescData = protoimpl.X.CompressGZIP(file_lsp_bilibili_bilibili_proto_rawDescData)
	})
	return file_lsp_bilibili_bilibili_proto_rawDescData
}

var file_lsp_bilibili_bilibili_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_lsp_bilibili_bilibili_proto_msgTypes = make([]protoimpl.MessageInfo, 81)
var file_lsp_bilibili_bilibili_proto_goTypes = []interface{}{
	(LiveStatus)(0),                                                     // 0: bilibili.LiveStatus
	(RoundStatus)(0),                                                    // 1: bilibili.RoundStatus
	(RoomStatus)(0),                                                     // 2: bilibili.RoomStatus
	(SpecialType)(0),                                                    // 3: bilibili.SpecialType
	(DynamicDescType)(0),                                                // 4: bilibili.DynamicDescType
	(AddOnCardShowType)(0),                                              // 5: bilibili.AddOnCardShowType
	(*XSpaceAccInfoResponse)(nil),                                       // 6: bilibili.XSpaceAccInfoResponse
	(*FeedListResponse)(nil),                                            // 7: bilibili.FeedListResponse
	(*GetKeyRequest)(nil),                                               // 8: bilibili.GetKeyRequest
	(*GetKeyResponse)(nil),                                              // 9: bilibili.GetKeyResponse
	(*LoginRequest)(nil),                                                // 10: bilibili.LoginRequest
	(*LoginResponse)(nil),                                               // 11: bilibili.LoginResponse
	(*XRelationStatResponse)(nil),                                       // 12: bilibili.XRelationStatResponse
	(*Card)(nil),                                                        // 13: bilibili.Card
	(*DynamicSvrSpaceHistoryResponse)(nil),                              // 14: bilibili.DynamicSvrSpaceHistoryResponse
	(*DynamicSvrDynamicNewResponse)(nil),                                // 15: bilibili.DynamicSvrDynamicNewResponse
	(*DynamicSvrDynamicHistoryResponse)(nil),                            // 16: bilibili.DynamicSvrDynamicHistoryResponse
	(*RelationModifyResponse)(nil),                                      // 17: bilibili.RelationModifyResponse
	(*GetAttentionListResponse)(nil),                                    // 18: bilibili.GetAttentionListResponse
	(*WebInterfaceNavResponse)(nil),                                     // 19: bilibili.WebInterfaceNavResponse
	(*CardWithImage)(nil),                                               // 20: bilibili.CardWithImage
	(*CardWithOrig)(nil),                                                // 21: bilibili.CardWithOrig
	(*CardWithVideo)(nil),                                               // 22: bilibili.CardWithVideo
	(*CardTextOnly)(nil),                                                // 23: bilibili.CardTextOnly
	(*CardWithPost)(nil),                                                // 24: bilibili.CardWithPost
	(*CardWithMusic)(nil),                                               // 25: bilibili.CardWithMusic
	(*CardWithMedia)(nil),                                               // 26: bilibili.CardWithMedia
	(*CardWithSketch)(nil),                                              // 27: bilibili.CardWithSketch
	(*CardWithLive)(nil),                                                // 28: bilibili.CardWithLive
	(*CardWithMylist)(nil),                                              // 29: bilibili.CardWithMylist
	(*CardWithLiveV2)(nil),                                              // 30: bilibili.CardWithLiveV2
	(*CardWithCourse)(nil),                                              // 31: bilibili.CardWithCourse
	(*XSpaceAccInfoResponse_Data)(nil),                                  // 32: bilibili.XSpaceAccInfoResponse.Data
	(*XSpaceAccInfoResponse_Data_LiveRoom)(nil),                         // 33: bilibili.XSpaceAccInfoResponse.Data.LiveRoom
	(*FeedListResponse_Data)(nil),                                       // 34: bilibili.FeedListResponse.Data
	(*FeedListResponse_Data_ListInfo)(nil),                              // 35: bilibili.FeedListResponse.Data.ListInfo
	(*GetKeyResponse_Data)(nil),                                         // 36: bilibili.GetKeyResponse.Data
	(*LoginResponse_Data)(nil),                                          // 37: bilibili.LoginResponse.Data
	(*LoginResponse_Data_TokenInfo)(nil),                                // 38: bilibili.LoginResponse.Data.TokenInfo
	(*LoginResponse_Data_CookieInfo)(nil),                               // 39: bilibili.LoginResponse.Data.CookieInfo
	(*LoginResponse_Data_CookieInfo_Cookie)(nil),                        // 40: bilibili.LoginResponse.Data.CookieInfo.Cookie
	(*XRelationStatResponse_Data)(nil),                                  // 41: bilibili.XRelationStatResponse.Data
	(*Card_Desc)(nil),                                                   // 42: bilibili.Card.Desc
	(*Card_Extra)(nil),                                                  // 43: bilibili.Card.Extra
	(*Card_Display)(nil),                                                // 44: bilibili.Card.Display
	(*Card_Desc_UserProfile)(nil),                                       // 45: bilibili.Card.Desc.UserProfile
	(*Card_Desc_UserProfile_Info)(nil),                                  // 46: bilibili.Card.Desc.UserProfile.Info
	(*Card_Display_EmojiInfo)(nil),                                      // 47: bilibili.Card.Display.EmojiInfo
	(*Card_Display_LikeInfo)(nil),                                       // 48: bilibili.Card.Display.LikeInfo
	(*Card_Display_AddOnCardInfo)(nil),                                  // 49: bilibili.Card.Display.AddOnCardInfo
	(*Card_Display_Origin)(nil),                                         // 50: bilibili.Card.Display.Origin
	(*Card_Display_EmojiInfo_EmojiDetail)(nil),                          // 51: bilibili.Card.Display.EmojiInfo.EmojiDetail
	(*Card_Display_EmojiInfo_EmojiDetail_Meta)(nil),                     // 52: bilibili.Card.Display.EmojiInfo.EmojiDetail.Meta
	(*Card_Display_LikeInfo_LikeUser)(nil),                              // 53: bilibili.Card.Display.LikeInfo.LikeUser
	(*Card_Display_AddOnCardInfo_ReserveAttachCard)(nil),                // 54: bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard
	(*Card_Display_AddOnCardInfo_AttachCard)(nil),                       // 55: bilibili.Card.Display.AddOnCardInfo.AttachCard
	(*Card_Display_AddOnCardInfo_TextVoteCard)(nil),                     // 56: bilibili.Card.Display.AddOnCardInfo.TextVoteCard
	(*Card_Display_AddOnCardInfo_UgcAttachCard)(nil),                    // 57: bilibili.Card.Display.AddOnCardInfo.UgcAttachCard
	(*Card_Display_AddOnCardInfo_GoodsCard)(nil),                        // 58: bilibili.Card.Display.AddOnCardInfo.GoodsCard
	(*Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst)(nil),      // 59: bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard.DescFirst
	(*Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery)(nil), // 60: bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard.ReserveLottery
	(*Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption)(nil),      // 61: bilibili.Card.Display.AddOnCardInfo.TextVoteCard.TextVoteOption
	(*Card_Display_AddOnCardInfo_GoodsCard_ListItem)(nil),               // 62: bilibili.Card.Display.AddOnCardInfo.GoodsCard.ListItem
	(*DynamicSvrSpaceHistoryResponse_Data)(nil),                         // 63: bilibili.DynamicSvrSpaceHistoryResponse.Data
	(*DynamicSvrDynamicNewResponse_Data)(nil),                           // 64: bilibili.DynamicSvrDynamicNewResponse.Data
	(*DynamicSvrDynamicHistoryResponse_Data)(nil),                       // 65: bilibili.DynamicSvrDynamicHistoryResponse.Data
	(*GetAttentionListResponse_Data)(nil),                               // 66: bilibili.GetAttentionListResponse.Data
	(*WebInterfaceNavResponse_Data)(nil),                                // 67: bilibili.WebInterfaceNavResponse.Data
	(*WebInterfaceNavResponse_Data_LevelInfo)(nil),                      // 68: bilibili.WebInterfaceNavResponse.Data.LevelInfo
	(*WebInterfaceNavResponse_Data_VipLabel)(nil),                       // 69: bilibili.WebInterfaceNavResponse.Data.VipLabel
	(*WebInterfaceNavResponse_Data_WbiImg)(nil),                         // 70: bilibili.WebInterfaceNavResponse.Data.WbiImg
	(*CardWithImage_Item)(nil),                                          // 71: bilibili.CardWithImage.Item
	(*CardWithImage_Item_Picture)(nil),                                  // 72: bilibili.CardWithImage.Item.Picture
	(*CardWithOrig_Item)(nil),                                           // 73: bilibili.CardWithOrig.Item
	(*CardWithOrig_OriginUser)(nil),                                     // 74: bilibili.CardWithOrig.OriginUser
	(*CardWithOrig_OriginUser_Info)(nil),                                // 75: bilibili.CardWithOrig.OriginUser.Info
	(*CardWithVideo_Origin)(nil),                                        // 76: bilibili.CardWithVideo.Origin
	(*CardTextOnly_Item)(nil),                                           // 77: bilibili.CardTextOnly.Item
	(*CardWithMusic_Item)(nil),                                          // 78: bilibili.CardWithMusic.Item
	(*CardWithMedia_ApiSeasonInfo)(nil),                                 // 79: bilibili.CardWithMedia.ApiSeasonInfo
	(*CardWithSketch_Vest)(nil),                                         // 80: bilibili.CardWithSketch.Vest
	(*CardWithSketch_Sketch)(nil),                                       // 81: bilibili.CardWithSketch.Sketch
	(*CardWithSketch_Sketch_Tag)(nil),                                   // 82: bilibili.CardWithSketch.Sketch.Tag
	(*CardWithMylist_Upper)(nil),                                        // 83: bilibili.CardWithMylist.Upper
	(*CardWithLiveV2_LivePlayInfo)(nil),                                 // 84: bilibili.CardWithLiveV2.LivePlayInfo
	(*CardWithCourse_Badge)(nil),                                        // 85: bilibili.CardWithCourse.Badge
	(*CardWithCourse_UpInfo)(nil),                                       // 86: bilibili.CardWithCourse.UpInfo
}
var file_lsp_bilibili_bilibili_proto_depIdxs = []int32{
	32, // 0: bilibili.XSpaceAccInfoResponse.data:type_name -> bilibili.XSpaceAccInfoResponse.Data
	34, // 1: bilibili.FeedListResponse.data:type_name -> bilibili.FeedListResponse.Data
	36, // 2: bilibili.GetKeyResponse.data:type_name -> bilibili.GetKeyResponse.Data
	37, // 3: bilibili.LoginResponse.data:type_name -> bilibili.LoginResponse.Data
	41, // 4: bilibili.XRelationStatResponse.data:type_name -> bilibili.XRelationStatResponse.Data
	42, // 5: bilibili.Card.desc:type_name -> bilibili.Card.Desc
	43, // 6: bilibili.Card.extra:type_name -> bilibili.Card.Extra
	44, // 7: bilibili.Card.display:type_name -> bilibili.Card.Display
	63, // 8: bilibili.DynamicSvrSpaceHistoryResponse.data:type_name -> bilibili.DynamicSvrSpaceHistoryResponse.Data
	64, // 9: bilibili.DynamicSvrDynamicNewResponse.data:type_name -> bilibili.DynamicSvrDynamicNewResponse.Data
	65, // 10: bilibili.DynamicSvrDynamicHistoryResponse.data:type_name -> bilibili.DynamicSvrDynamicHistoryResponse.Data
	66, // 11: bilibili.GetAttentionListResponse.data:type_name -> bilibili.GetAttentionListResponse.Data
	67, // 12: bilibili.WebInterfaceNavResponse.data:type_name -> bilibili.WebInterfaceNavResponse.Data
	71, // 13: bilibili.CardWithImage.item:type_name -> bilibili.CardWithImage.Item
	73, // 14: bilibili.CardWithOrig.item:type_name -> bilibili.CardWithOrig.Item
	74, // 15: bilibili.CardWithOrig.origin_user:type_name -> bilibili.CardWithOrig.OriginUser
	76, // 16: bilibili.CardWithVideo.origin:type_name -> bilibili.CardWithVideo.Origin
	77, // 17: bilibili.CardTextOnly.item:type_name -> bilibili.CardTextOnly.Item
	78, // 18: bilibili.CardWithMusic.item:type_name -> bilibili.CardWithMusic.Item
	79, // 19: bilibili.CardWithMedia.apiSeasonInfo:type_name -> bilibili.CardWithMedia.ApiSeasonInfo
	80, // 20: bilibili.CardWithSketch.vest:type_name -> bilibili.CardWithSketch.Vest
	81, // 21: bilibili.CardWithSketch.sketch:type_name -> bilibili.CardWithSketch.Sketch
	0,  // 22: bilibili.CardWithLive.live_status:type_name -> bilibili.LiveStatus
	1,  // 23: bilibili.CardWithLive.round_status:type_name -> bilibili.RoundStatus
	83, // 24: bilibili.CardWithMylist.upper:type_name -> bilibili.CardWithMylist.Upper
	84, // 25: bilibili.CardWithLiveV2.live_play_info:type_name -> bilibili.CardWithLiveV2.LivePlayInfo
	85, // 26: bilibili.CardWithCourse.badge:type_name -> bilibili.CardWithCourse.Badge
	86, // 27: bilibili.CardWithCourse.up_info:type_name -> bilibili.CardWithCourse.UpInfo
	33, // 28: bilibili.XSpaceAccInfoResponse.Data.live_room:type_name -> bilibili.XSpaceAccInfoResponse.Data.LiveRoom
	2,  // 29: bilibili.XSpaceAccInfoResponse.Data.LiveRoom.roomStatus:type_name -> bilibili.RoomStatus
	0,  // 30: bilibili.XSpaceAccInfoResponse.Data.LiveRoom.liveStatus:type_name -> bilibili.LiveStatus
	1,  // 31: bilibili.XSpaceAccInfoResponse.Data.LiveRoom.roundStatus:type_name -> bilibili.RoundStatus
	35, // 32: bilibili.FeedListResponse.Data.list:type_name -> bilibili.FeedListResponse.Data.ListInfo
	38, // 33: bilibili.LoginResponse.Data.token_info:type_name -> bilibili.LoginResponse.Data.TokenInfo
	39, // 34: bilibili.LoginResponse.Data.cookie_info:type_name -> bilibili.LoginResponse.Data.CookieInfo
	40, // 35: bilibili.LoginResponse.Data.CookieInfo.cookies:type_name -> bilibili.LoginResponse.Data.CookieInfo.Cookie
	4,  // 36: bilibili.Card.Desc.orig_type:type_name -> bilibili.DynamicDescType
	4,  // 37: bilibili.Card.Desc.type:type_name -> bilibili.DynamicDescType
	45, // 38: bilibili.Card.Desc.user_profile:type_name -> bilibili.Card.Desc.UserProfile
	47, // 39: bilibili.Card.Display.emoji_info:type_name -> bilibili.Card.Display.EmojiInfo
	48, // 40: bilibili.Card.Display.like_info:type_name -> bilibili.Card.Display.LikeInfo
	50, // 41: bilibili.Card.Display.origin:type_name -> bilibili.Card.Display.Origin
	49, // 42: bilibili.Card.Display.add_on_card_info:type_name -> bilibili.Card.Display.AddOnCardInfo
	46, // 43: bilibili.Card.Desc.UserProfile.info:type_name -> bilibili.Card.Desc.UserProfile.Info
	51, // 44: bilibili.Card.Display.EmojiInfo.emoji_details:type_name -> bilibili.Card.Display.EmojiInfo.EmojiDetail
	53, // 45: bilibili.Card.Display.LikeInfo.like_users:type_name -> bilibili.Card.Display.LikeInfo.LikeUser
	5,  // 46: bilibili.Card.Display.AddOnCardInfo.add_on_card_show_type:type_name -> bilibili.AddOnCardShowType
	54, // 47: bilibili.Card.Display.AddOnCardInfo.reserve_attach_card:type_name -> bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard
	55, // 48: bilibili.Card.Display.AddOnCardInfo.attach_card:type_name -> bilibili.Card.Display.AddOnCardInfo.AttachCard
	57, // 49: bilibili.Card.Display.AddOnCardInfo.ugc_attach_card:type_name -> bilibili.Card.Display.AddOnCardInfo.UgcAttachCard
	47, // 50: bilibili.Card.Display.Origin.emoji_info:type_name -> bilibili.Card.Display.EmojiInfo
	48, // 51: bilibili.Card.Display.Origin.like_info:type_name -> bilibili.Card.Display.LikeInfo
	50, // 52: bilibili.Card.Display.Origin.origin:type_name -> bilibili.Card.Display.Origin
	49, // 53: bilibili.Card.Display.Origin.add_on_card_info:type_name -> bilibili.Card.Display.AddOnCardInfo
	52, // 54: bilibili.Card.Display.EmojiInfo.EmojiDetail.meta:type_name -> bilibili.Card.Display.EmojiInfo.EmojiDetail.Meta
	59, // 55: bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard.desc_first:type_name -> bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard.DescFirst
	60, // 56: bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard.reserve_lottery:type_name -> bilibili.Card.Display.AddOnCardInfo.ReserveAttachCard.ReserveLottery
	61, // 57: bilibili.Card.Display.AddOnCardInfo.TextVoteCard.options:type_name -> bilibili.Card.Display.AddOnCardInfo.TextVoteCard.TextVoteOption
	62, // 58: bilibili.Card.Display.AddOnCardInfo.GoodsCard.list:type_name -> bilibili.Card.Display.AddOnCardInfo.GoodsCard.ListItem
	13, // 59: bilibili.DynamicSvrSpaceHistoryResponse.Data.cards:type_name -> bilibili.Card
	13, // 60: bilibili.DynamicSvrDynamicNewResponse.Data.cards:type_name -> bilibili.Card
	13, // 61: bilibili.DynamicSvrDynamicHistoryResponse.Data.cards:type_name -> bilibili.Card
	68, // 62: bilibili.WebInterfaceNavResponse.Data.level_info:type_name -> bilibili.WebInterfaceNavResponse.Data.LevelInfo
	69, // 63: bilibili.WebInterfaceNavResponse.Data.vip_label:type_name -> bilibili.WebInterfaceNavResponse.Data.VipLabel
	70, // 64: bilibili.WebInterfaceNavResponse.Data.wbi_img:type_name -> bilibili.WebInterfaceNavResponse.Data.WbiImg
	72, // 65: bilibili.CardWithImage.Item.pictures:type_name -> bilibili.CardWithImage.Item.Picture
	4,  // 66: bilibili.CardWithOrig.Item.orig_type:type_name -> bilibili.DynamicDescType
	75, // 67: bilibili.CardWithOrig.OriginUser.info:type_name -> bilibili.CardWithOrig.OriginUser.Info
	4,  // 68: bilibili.CardWithVideo.Origin.type:type_name -> bilibili.DynamicDescType
	82, // 69: bilibili.CardWithSketch.Sketch.tags:type_name -> bilibili.CardWithSketch.Sketch.Tag
	0,  // 70: bilibili.CardWithLiveV2.LivePlayInfo.live_status:type_name -> bilibili.LiveStatus
	71, // [71:71] is the sub-list for method output_type
	71, // [71:71] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_lsp_bilibili_bilibili_proto_init() }
func file_lsp_bilibili_bilibili_proto_init() {
	if File_lsp_bilibili_bilibili_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lsp_bilibili_bilibili_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSpaceAccInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRelationStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSvrSpaceHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSvrDynamicNewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSvrDynamicHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationModifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttentionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebInterfaceNavResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithOrig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTextOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithMusic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithSketch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithLive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithMylist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithLiveV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithCourse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSpaceAccInfoResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSpaceAccInfoResponse_Data_LiveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedListResponse_Data_ListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_Data_TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_Data_CookieInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse_Data_CookieInfo_Cookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRelationStatResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Desc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Extra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Desc_UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Desc_UserProfile_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_EmojiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_LikeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_EmojiInfo_EmojiDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_EmojiInfo_EmojiDetail_Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_LikeInfo_LikeUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_ReserveAttachCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_AttachCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_TextVoteCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_UgcAttachCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_GoodsCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_ReserveAttachCard_DescFirst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_ReserveAttachCard_ReserveLottery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_TextVoteCard_TextVoteOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card_Display_AddOnCardInfo_GoodsCard_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSvrSpaceHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSvrDynamicNewResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSvrDynamicHistoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttentionListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebInterfaceNavResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebInterfaceNavResponse_Data_LevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebInterfaceNavResponse_Data_VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebInterfaceNavResponse_Data_WbiImg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithImage_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithImage_Item_Picture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithOrig_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithOrig_OriginUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithOrig_OriginUser_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithVideo_Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTextOnly_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithMusic_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithMedia_ApiSeasonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithSketch_Vest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithSketch_Sketch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithSketch_Sketch_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithMylist_Upper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithLiveV2_LivePlayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithCourse_Badge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsp_bilibili_bilibili_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithCourse_UpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lsp_bilibili_bilibili_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   81,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lsp_bilibili_bilibili_proto_goTypes,
		DependencyIndexes: file_lsp_bilibili_bilibili_proto_depIdxs,
		EnumInfos:         file_lsp_bilibili_bilibili_proto_enumTypes,
		MessageInfos:      file_lsp_bilibili_bilibili_proto_msgTypes,
	}.Build()
	File_lsp_bilibili_bilibili_proto = out.File
	file_lsp_bilibili_bilibili_proto_rawDesc = nil
	file_lsp_bilibili_bilibili_proto_goTypes = nil
	file_lsp_bilibili_bilibili_proto_depIdxs = nil
}
